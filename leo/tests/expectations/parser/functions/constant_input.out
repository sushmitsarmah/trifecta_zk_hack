namespace = "Parse"
expectation = "Pass"

[[outputs]]

[outputs.imports]

[outputs.stubs]

[outputs.program_scopes.test]
program_id = '{"name":"test","network":"\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"aleo\\\",\\\"span\\\":\\\"{\\\\\\\"lo\\\\\\\":0,\\\\\\\"hi\\\\\\\":0}\\\"}\""}'
consts = []
structs = []
mappings = []
functions = [[
    "x",
    { annotations = [], variant = "Function", identifier = '{"id":"2","name":"x","span":"{\"lo\":39,\"hi\":40}"}', id = 7, input = [{ identifier = '{"id":"3","name":"x","span":"{\"lo\":50,\"hi\":51}"}', mode = "Constant", id = 4, type_ = { Integer = "U8" }, span = { lo = 50, hi = 55 } }], output = [{ mode = "None", id = 5, type_ = { Integer = "U8" }, span = { lo = 60, hi = 62 } }], output_type = { Integer = "U8" }, block = { statements = [], id = 6, span = { lo = 63, hi = 65 } }, span = { lo = 30, hi = 65 } },
]]

[outputs.program_scopes.test.span]
lo = 2
hi = 67

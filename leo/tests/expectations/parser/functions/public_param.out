namespace = "Parse"
expectation = "Pass"

[[outputs]]

[outputs.imports]

[outputs.stubs]

[outputs.program_scopes.test]
program_id = '{"name":"test","network":"\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"aleo\\\",\\\"span\\\":\\\"{\\\\\\\"lo\\\\\\\":0,\\\\\\\"hi\\\\\\\":0}\\\"}\""}'
consts = []
structs = []
mappings = []
functions = [
    [
    "x",
    { annotations = [], variant = "Function", identifier = '{"id":"2","name":"x","span":"{\"lo\":39,\"hi\":40}"}', id = 11, input = [
    { identifier = '{"id":"3","name":"x","span":"{\"lo\":41,\"hi\":42}"}', mode = "None", id = 4, type_ = { Integer = "U32" }, span = { lo = 41, hi = 47 } },
    { identifier = '{"id":"5","name":"y","span":"{\"lo\":56,\"hi\":57}"}', mode = "Public", id = 6, type_ = { Integer = "I32" }, span = { lo = 56, hi = 62 } },
], output = [{ mode = "None", id = 7, type_ = { Integer = "U8" }, span = { lo = 67, hi = 69 } }], output_type = { Integer = "U8" }, block = { id = 10, statements = [{ Return = { id = 9, expression = { Literal = { Integer = [
    "U8",
    "0",
    { span = { lo = 87, hi = 90 } },
    8,
] } }, span = { lo = 80, hi = 91 } } }], span = { lo = 70, hi = 97 } }, span = { lo = 30, hi = 97 } },
],
    [
    "x",
    { annotations = [], variant = "Function", identifier = '{"id":"12","name":"x","span":"{\"lo\":116,\"hi\":117}"}', id = 21, input = [
    { identifier = '{"id":"13","name":"x","span":"{\"lo\":125,\"hi\":126}"}', mode = "Public", id = 14, type_ = { Integer = "U32" }, span = { lo = 125, hi = 131 } },
    { identifier = '{"id":"15","name":"y","span":"{\"lo\":133,\"hi\":134}"}', mode = "None", id = 16, type_ = { Integer = "I32" }, span = { lo = 133, hi = 139 } },
], output = [{ mode = "None", id = 17, type_ = { Integer = "U8" }, span = { lo = 144, hi = 146 } }], output_type = { Integer = "U8" }, block = { id = 20, statements = [{ Return = { id = 19, expression = { Literal = { Integer = [
    "U8",
    "0",
    { span = { lo = 164, hi = 167 } },
    18,
] } }, span = { lo = 157, hi = 168 } } }], span = { lo = 147, hi = 174 } }, span = { lo = 107, hi = 174 } },
],
]

[outputs.program_scopes.test.span]
lo = 2
hi = 176

namespace = "Parse"
expectation = "Pass"

[[outputs]]

[outputs.imports]

[outputs.stubs]

[outputs.program_scopes.test]
program_id = '{"name":"test","network":"\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"aleo\\\",\\\"span\\\":\\\"{\\\\\\\"lo\\\\\\\":0,\\\\\\\"hi\\\\\\\":0}\\\"}\""}'
consts = []
structs = []
mappings = []
functions = [[
    "x",
    { annotations = [], variant = "Function", identifier = '{"id":"2","name":"x","span":"{\"lo\":39,\"hi\":40}"}', id = 11, input = [
    { identifier = '{"id":"3","name":"x","span":"{\"lo\":41,\"hi\":42}"}', mode = "None", id = 4, type_ = { Integer = "U32" }, span = { lo = 41, hi = 47 } },
    { identifier = '{"id":"5","name":"y","span":"{\"lo\":49,\"hi\":50}"}', mode = "None", id = 6, type_ = { Integer = "I32" }, span = { lo = 49, hi = 55 } },
], output = [{ mode = "None", id = 7, type_ = { Integer = "U8" }, span = { lo = 60, hi = 62 } }], output_type = { Integer = "U8" }, block = { id = 10, statements = [{ Return = { id = 9, expression = { Literal = { Integer = [
    "U8",
    "0",
    { span = { lo = 80, hi = 83 } },
    8,
] } }, span = { lo = 73, hi = 84 } } }], span = { lo = 63, hi = 90 } }, span = { lo = 30, hi = 90 } },
]]

[outputs.program_scopes.test.span]
lo = 2
hi = 91

namespace = "Parse"
expectation = "Pass"

[[outputs]]

[outputs.imports]

[outputs.stubs]

[outputs.program_scopes.test]
program_id = '{"name":"test","network":"\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"aleo\\\",\\\"span\\\":\\\"{\\\\\\\"lo\\\\\\\":0,\\\\\\\"hi\\\\\\\":0}\\\"}\""}'
consts = []
structs = []
mappings = []
functions = [[
    "test",
    { variant = "Function", identifier = '{"id":"4","name":"test","span":"{\"lo\":134,\"hi\":138}"}', input = [], id = 7, annotations = [{ identifier = '{"id":"2","name":"test","span":"{\"lo\":111,\"hi\":115}"}', id = 3, span = { lo = 110, hi = 115 } }], output = [{ mode = "None", id = 5, type_ = { Integer = "U8" }, span = { lo = 144, hi = 146 } }], output_type = { Integer = "U8" }, block = { statements = [], id = 6, span = { lo = 147, hi = 149 } }, span = { lo = 125, hi = 149 } },
]]

[outputs.program_scopes.test.span]
lo = 2
hi = 151

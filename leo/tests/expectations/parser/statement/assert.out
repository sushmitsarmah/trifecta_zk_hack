namespace = "ParseStatement"
expectation = "Pass"

[[outputs]]

[outputs.Assert]
id = 2

[[outputs.Assert.variant.AssertEq]]
Identifier = '{"id":"0","name":"x","span":"{\"lo\":10,\"hi\":11}"}'

[[outputs.Assert.variant.AssertEq]]
Identifier = '{"id":"1","name":"y","span":"{\"lo\":13,\"hi\":14}"}'

[outputs.Assert.span]
lo = 0
hi = 9

[[outputs]]

[outputs.Assert]
id = 10

[[outputs.Assert.variant.AssertEq]]

[outputs.Assert.variant.AssertEq.Struct]
name = '{"id":"0","name":"Foo","span":"{\"lo\":10,\"hi\":13}"}'
id = 4

[[outputs.Assert.variant.AssertEq.Struct.members]]
identifier = '{"id":"1","name":"x","span":"{\"lo\":16,\"hi\":17}"}'
id = 3

[outputs.Assert.variant.AssertEq.Struct.members.expression]
Identifier = '{"id":"2","name":"x","span":"{\"lo\":19,\"hi\":20}"}'

[outputs.Assert.variant.AssertEq.Struct.members.span]
lo = 16
hi = 20

[outputs.Assert.variant.AssertEq.Struct.span]
lo = 10
hi = 22

[[outputs.Assert.variant.AssertEq]]

[outputs.Assert.variant.AssertEq.Struct]
name = '{"id":"5","name":"Foo","span":"{\"lo\":24,\"hi\":27}"}'
id = 9

[[outputs.Assert.variant.AssertEq.Struct.members]]
identifier = '{"id":"6","name":"x","span":"{\"lo\":30,\"hi\":31}"}'
id = 8

[outputs.Assert.variant.AssertEq.Struct.members.expression]
Identifier = '{"id":"7","name":"y","span":"{\"lo\":33,\"hi\":34}"}'

[outputs.Assert.variant.AssertEq.Struct.members.span]
lo = 30
hi = 34

[outputs.Assert.variant.AssertEq.Struct.span]
lo = 24
hi = 36

[outputs.Assert.span]
lo = 0
hi = 9

[[outputs]]

[outputs.Assert]
id = 2

[[outputs.Assert.variant.AssertNeq]]
Identifier = '{"id":"0","name":"x","span":"{\"lo\":11,\"hi\":12}"}'

[[outputs.Assert.variant.AssertNeq]]
Identifier = '{"id":"1","name":"y","span":"{\"lo\":14,\"hi\":15}"}'

[outputs.Assert.span]
lo = 0
hi = 10

[[outputs]]

[outputs.Assert]
id = 1

[outputs.Assert.variant.Assert.Literal]
Boolean = [
    false,
    { span = { lo = 7, hi = 12 } },
    0,
]

[outputs.Assert.span]
lo = 0
hi = 6

namespace = "ParseStatement"
expectation = "Fail"
outputs = [
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x = expr;
     |         ^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x = ();
     |         ^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x = x+y;
     |         ^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x = (x,y);
     |         ^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x = x();
     |         ^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x = expr;
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x = ();
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x = x+y;
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x = (x,y);
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x = x();
     | ^^^^^^^^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x: u32 = expr;
     |         ^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x: u32 = ();
     |         ^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x: u32 = x+y;
     |         ^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x: u32 = (x,y);
     |         ^""",
    """
Error [EPAR0370005]: expected : -- found 'x'
    --> test:1:9
     |
   1 | let mut x: u32 = x();
     |         ^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x: u32 = expr;
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x: u32 = ();
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x: u32 = x+y;
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x: u32 = (x,y);
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant mut x: u32 = x();
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found ','
    --> test:1:10
     |
   1 | let (x,y,,) = ();
     |          ^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found ','
    --> test:1:6
     |
   1 | let (,x,y) = ();
     |      ^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found ','
    --> test:1:8
     |
   1 | let (x,,y) = ();
     |        ^""",
    """
Error [EPAR0370005]: expected integer literal -- found '('
    --> test:1:13
     |
   1 | let x: [u8; (2,,)] = [[0,0], [0,0]];
     |             ^""",
    """
Error [EPAR0370005]: expected 'address', 'bool', 'field', 'Future', 'group', 'scalar', 'signature', 'string', 'i8', 'i16', 'i32', 'i64', 'i128', 'u8', 'u16', 'u32', 'u64', 'u128' -- found 'constant'
    --> test:1:8
     |
   1 | let x: constant = expr;
     |        ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found 'constant'
    --> test:1:1
     |
   1 | constant x: let = expr;
     | ^^^^^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found '<eof>'
    --> test:1:1
     |
   1 | let
     | ^^^""",
    """
Error [EPAR0370005]: expected : -- found '<eof>'
    --> test:1:5
     |
   1 | let x
     |     ^""",
    """
Error [EPAR0370005]: expected 'address', 'bool', 'field', 'Future', 'group', 'scalar', 'signature', 'string', 'i8', 'i16', 'i32', 'i64', 'i128', 'u8', 'u16', 'u32', 'u64', 'u128' -- found '<eof>'
    --> test:1:6
     |
   1 | let x:
     |      ^""",
    """
Error [EPAR0370005]: expected : -- found '='
    --> test:1:7
     |
   1 | let x = (a, y]);
     |       ^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found '='
    --> test:1:5
     |
   1 | let = 1u8;
     |     ^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found ';'
    --> test:1:4
     |
   1 | let;
     |    ^""",
    """
Error [EPAR0370005]: expected : -- found '1'
    --> test:1:7
     |
   1 | let x 1u8;
     |       ^""",
    """
Error [EPAR0370005]: expected = -- found ';'
    --> test:1:10
     |
   1 | let x: u8;
     |          ^""",
    """
Error [EPAR0370005]: expected = -- found '<eof>'
    --> test:1:8
     |
   1 | let x: u8
     |        ^^""",
    """
Error [EPAR0370005]: expected 'address', 'bool', 'field', 'Future', 'group', 'scalar', 'signature', 'string', 'i8', 'i16', 'i32', 'i64', 'i128', 'u8', 'u16', 'u32', 'u64', 'u128' -- found '='
    --> test:1:8
     |
   1 | let x: = 1;
     |        ^""",
    """
Error [EPAR0370005]: expected ; -- found ']'
    --> test:1:11
     |
   1 | let x: [u8] = 1;
     |           ^""",
    """
Error [EPAR0370005]: expected integer literal -- found '<eof>'
    --> test:1:11
     |
   1 | let x: [u8;
     |           ^""",
    """
Error [EPAR0370005]: expected ] -- found 'u8'
    --> test:1:14
     |
   1 | let x: [u8; 1u8] = [1,
     |              ^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found ']'
    --> test:1:15
     |
   1 | let dbg: u8 = ];
     |               ^""",
    """
Error [EPAR0370016]: Could not lex the following content: `ðŸ¦€:`.
""",
    """
Error [EPAR0370005]: expected : -- found '='
    --> test:1:9
     |
   1 | let (x) = ...;
     |         ^""",
    """
Error [EPAR0370029]: A tuple expression must have at least two elements.
    --> test:1:5
     |
   1 | let (x,) = ...;
     |     ^^^^""",
    """
Error [EPAR0370009]: unexpected string: expected 'expression', found '_'
    --> test:1:5
     |
   1 | let _1: u8 = 1u8;
     |     ^""",
    """
Error [EPAR0370017]: Could not parse the implicit value: 1___091.
    --> test:1:5
     |
   1 | let 1___091: u8 = 12u8;
     |     ^^^^^^^""",
]

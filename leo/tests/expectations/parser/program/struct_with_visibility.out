namespace = "Parse"
expectation = "Pass"

[[outputs]]

[outputs.imports]

[outputs.stubs]

[outputs.program_scopes.test]
program_id = '{"name":"test","network":"\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"aleo\\\",\\\"span\\\":\\\"{\\\\\\\"lo\\\\\\\":0,\\\\\\\"hi\\\\\\\":0}\\\"}\""}'
consts = []
structs = [[
    "foo",
    { identifier = '{"id":"2","name":"foo","span":"{\"lo\":33,\"hi\":36}"}', is_record = false, id = 9, members = [
    { mode = "Public", identifier = '{"id":"3","name":"baz","span":"{\"lo\":54,\"hi\":57}"}', type_ = "Address", id = 4, span = { lo = 54, hi = 66 } },
    { mode = "Private", identifier = '{"id":"5","name":"floo","span":"{\"lo\":84,\"hi\":88}"}', id = 6, type_ = { Integer = "U64" }, span = { lo = 84, hi = 93 } },
    { mode = "None", identifier = '{"id":"7","name":"data","span":"{\"lo\":103,\"hi\":107}"}', type_ = "Boolean", id = 8, span = { lo = 103, hi = 113 } },
], span = { lo = 26, hi = 120 } },
]]
mappings = []
functions = []

[outputs.program_scopes.test.span]
lo = 2
hi = 122

namespace = "Parse"
expectation = "Pass"

[[outputs]]

[outputs.imports]

[outputs.stubs]

[outputs.program_scopes.test]
program_id = '{"name":"test","network":"\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"aleo\\\",\\\"span\\\":\\\"{\\\\\\\"lo\\\\\\\":0,\\\\\\\"hi\\\\\\\":0}\\\"}\""}'
consts = []
structs = []
mappings = [[
    "Yo",
    { identifier = '{"id":"2","name":"Yo","span":"{\"lo\":34,\"hi\":36}"}', key_type = "Address", id = 3, value_type = { Integer = "U32" }, span = { lo = 26, hi = 53 } },
]]
functions = [[
    "main",
    { annotations = [], variant = "Transition", identifier = '{"id":"4","name":"main","span":"{\"lo\":70,\"hi\":74}"}', output = [], output_type = "Unit", id = 24, input = [{ identifier = '{"id":"5","name":"a","span":"{\"lo\":75,\"hi\":76}"}', mode = "None", type_ = "Address", id = 6, span = { lo = 75, hi = 85 } }], block = { id = 23, statements = [
    { Assert = { id = 11, variant = { AssertEq = [
    { Identifier = '{"id":"7","name":"a","span":"{\"lo\":107,\"hi\":108}"}' },
    { Access = { Member = { name = '{"id":"9","name":"caller","span":"{\"lo\":115,\"hi\":121}"}', id = 10, inner = { Identifier = '{"id":"8","name":"self","span":"{\"lo\":110,\"hi\":114}"}' }, span = { lo = 110, hi = 121 } } } },
] }, span = { lo = 97, hi = 106 } } },
    { Assert = { id = 15, variant = { AssertEq = [
    { Identifier = '{"id":"12","name":"a","span":"{\"lo\":142,\"hi\":143}"}' },
    { Literal = { Address = [
    "test.aleo",
    { span = { lo = 145, hi = 157 } },
    14,
] } },
] }, span = { lo = 132, hi = 141 } } },
    { Assert = { id = 19, variant = { AssertEq = [
    { Identifier = '{"id":"16","name":"a","span":"{\"lo\":178,\"hi\":179}"}' },
    { Literal = { Address = [
    "hello.aleo",
    { span = { lo = 181, hi = 186 } },
    18,
] } },
] }, span = { lo = 168, hi = 177 } } },
    { Return = { id = 22, expression = { Literal = { Address = [
    "foo.aleo",
    { span = { lo = 209, hi = 212 } },
    21,
] } }, span = { lo = 202, hi = 218 } } },
], span = { lo = 87, hi = 224 } }, span = { lo = 59, hi = 224 } },
]]

[outputs.program_scopes.test.span]
lo = 2
hi = 226

namespace = "Parse"
expectation = "Pass"

[[outputs]]

[outputs.imports]

[outputs.stubs]

[outputs.program_scopes.test]
program_id = '{"name":"test","network":"\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"aleo\\\",\\\"span\\\":\\\"{\\\\\\\"lo\\\\\\\":0,\\\\\\\"hi\\\\\\\":0}\\\"}\""}'
consts = []
structs = []
mappings = []
functions = [
    [
    "main",
    { annotations = [], variant = "AsyncTransition", identifier = '{"id":"2","name":"main","span":"{\"lo\":47,\"hi\":51}"}', input = [], output_type = "Boolean", id = 5, output = [{ mode = "None", type_ = "Boolean", id = 3, span = { lo = 57, hi = 61 } }], block = { statements = [], id = 4, span = { lo = 62, hi = 74 } }, span = { lo = 30, hi = 74 } },
],
    [
    "finalize_main",
    { annotations = [], variant = "AsyncFunction", identifier = '{"id":"6","name":"finalize_main","span":"{\"lo\":99,\"hi\":112}"}', input = [], output = [], output_type = "Unit", id = 8, block = { statements = [], id = 7, span = { lo = 115, hi = 127 } }, span = { lo = 84, hi = 127 } },
],
    [
    "main",
    { annotations = [], variant = "Function", identifier = '{"id":"9","name":"main","span":"{\"lo\":146,\"hi\":150}"}', input = [], output_type = "Boolean", id = 12, output = [{ mode = "None", type_ = "Boolean", id = 10, span = { lo = 156, hi = 160 } }], block = { statements = [], id = 11, span = { lo = 161, hi = 173 } }, span = { lo = 137, hi = 173 } },
],
    [
    "main",
    { annotations = [], variant = "AsyncFunction", identifier = '{"id":"13","name":"main","span":"{\"lo\":193,\"hi\":197}"}', id = 23, input = [
    { identifier = '{"id":"14","name":"a","span":"{\"lo\":198,\"hi\":199}"}', mode = "None", id = 16, type_ = { Composite = { id = '{"id":"15","name":"foo","span":"{\"lo\":201,\"hi\":204}"}' } }, span = { lo = 198, hi = 204 } },
    { identifier = '{"id":"17","name":"b","span":"{\"lo\":206,\"hi\":207}"}', mode = "None", id = 19, type_ = { Composite = { id = '{"id":"18","name":"bar","span":"{\"lo\":209,\"hi\":212}"}' } }, span = { lo = 206, hi = 212 } },
], output = [{ mode = "None", id = 21, type_ = { Composite = { id = '{"id":"20","name":"baz","span":"{\"lo\":217,\"hi\":220}"}' } }, span = { lo = 217, hi = 220 } }], output_type = { Composite = { id = '{"id":"20","name":"baz","span":"{\"lo\":217,\"hi\":220}"}' } }, block = { statements = [], id = 22, span = { lo = 221, hi = 233 } }, span = { lo = 178, hi = 233 } },
],
]

[outputs.program_scopes.test.span]
lo = 2
hi = 245

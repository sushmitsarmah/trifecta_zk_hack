namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "1cd2dd98064f19e046f15fc21049e47fe5191fedd90b8c13f826e6128c63a4bf", unrolled_ast = "1cd2dd98064f19e046f15fc21049e47fe5191fedd90b8c13f826e6128c63a4bf", ssa_ast = "605eadbcb724b40419e5fa8b5cf800e0d97237b17175bc803802cef0986ee168", flattened_ast = "3b5561a745b44711f0add62664ffacea72179f1b5f49f1bf17d21fb9ed6d60c7", destructured_ast = "b9ab8fc45ccbcd0c0627257c0adcaeeff2bbe7647c4ebb27d91c139bbe1df440", inlined_ast = "b9ab8fc45ccbcd0c0627257c0adcaeeff2bbe7647c4ebb27d91c139bbe1df440", dce_ast = "b9ab8fc45ccbcd0c0627257c0adcaeeff2bbe7647c4ebb27d91c139bbe1df440", bytecode = """
program test.aleo;

function main:
    input r0 as field.private;
    input r1 as field.private;
    neg r0 into r2;
    neg r1 into r3;
    is.eq r2 r3 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "163b4dae689a449686c0502351d2551d84266e67e9fb1615e4d9111980318b98", unrolled_ast = "916e3a7a2113916fcc44d65b44402b68414f33fd06c4e0a537a24903716c0879", ssa_ast = "51de2b1cbe49dc07af1c8867b8ec4b3f19391cf84f59642ea659de56ce875e39", flattened_ast = "12418c2f85b68040b8809c78aecdce66dcfc4f22c4bb94fc89038b4c8449d9c6", destructured_ast = "c849fd3c4345c7e0b0f5655181a4c4bc59037e668703588faa5b6e6068ba1a13", inlined_ast = "c849fd3c4345c7e0b0f5655181a4c4bc59037e668703588faa5b6e6068ba1a13", dce_ast = "61390312771870c4af22384b22ce532510071ff946ce5b5e064575430462816a", bytecode = """
program test.aleo;

function foo:
    input r0 as u32.private;
    input r1 as u32.private;
    input r2 as boolean.private;
    output 1u32 as u32.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "c853d211f0b9902b1978a581b79719747d48e271dc56f1a73237ff53581f6375", unrolled_ast = "d72555c77add223b02cd8223638dc0bc7000fbef14c9a1c70b42bd94963cf279", ssa_ast = "8d8e42f62857383a8835d67e3620671e753702f6f97d9c1494a2b11f6e027de4", flattened_ast = "ff8bde1f011ef7733a899388521ddac8f0f557efd1a02c987b73a0abc6089025", destructured_ast = "0b14361e6ead30039338a26e7b1bc07dd377bdc7b5d25459f31a339e8f7aaefc", inlined_ast = "0b14361e6ead30039338a26e7b1bc07dd377bdc7b5d25459f31a339e8f7aaefc", dce_ast = "0b14361e6ead30039338a26e7b1bc07dd377bdc7b5d25459f31a339e8f7aaefc", bytecode = """
program test.aleo;

function main:
    input r0 as u32.private;
    sub r0 1u32 into r1;
    sub r1 1u32 into r2;
    sub r2 1u32 into r3;
    is.eq r3 0u32 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

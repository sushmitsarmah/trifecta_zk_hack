namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "2800cd773c3ee8ceef69d7bf4da364c0dd1028ceee40cfbdb407a4f8afb6a065", unrolled_ast = "2800cd773c3ee8ceef69d7bf4da364c0dd1028ceee40cfbdb407a4f8afb6a065", ssa_ast = "785bb8b7a5d9f8184b9a9e72f3b6715018b75ae80f5a09a1d038b07173d1f2eb", flattened_ast = "82a14fb1fef2eada124f7ef5aa480c23cdcfc94518eb00605ec0a9d10d8a7ce4", destructured_ast = "e3cb83cc9c4160e84158f1763db871da21e9b3ddebf7783d605520bb34dd05e3", inlined_ast = "e3cb83cc9c4160e84158f1763db871da21e9b3ddebf7783d605520bb34dd05e3", dce_ast = "e3cb83cc9c4160e84158f1763db871da21e9b3ddebf7783d605520bb34dd05e3", bytecode = """
program test.aleo;

function main:
    input r0 as i64.private;
    input r1 as i64.private;
    input r2 as i64.private;
    rem r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

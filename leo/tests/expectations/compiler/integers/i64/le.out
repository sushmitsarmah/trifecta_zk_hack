namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "6275cca8353311539c0123fb54eabd662b9edd6b2b5d61328211583ed2619fd5", unrolled_ast = "6275cca8353311539c0123fb54eabd662b9edd6b2b5d61328211583ed2619fd5", ssa_ast = "19d68ec27d45b3dbaa2eed5a898cf0077cab6c70971a6d07634fa46477e0d177", flattened_ast = "5f7b0296f74c890a2e690c21df6bb4bb3efd29b4071c01448f481c2d38447c67", destructured_ast = "16dc42d6749f6c5583c691cf9cbefdc1d7a3af214dee3685a60b9a635a5d8658", inlined_ast = "16dc42d6749f6c5583c691cf9cbefdc1d7a3af214dee3685a60b9a635a5d8658", dce_ast = "16dc42d6749f6c5583c691cf9cbefdc1d7a3af214dee3685a60b9a635a5d8658", bytecode = """
program test.aleo;

function main:
    input r0 as i64.private;
    input r1 as i64.private;
    input r2 as boolean.private;
    lte r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "6a38d85f4fad72167b0aca7874c2e1f84dd57a4b313434496a9774775bb83b97", unrolled_ast = "6a38d85f4fad72167b0aca7874c2e1f84dd57a4b313434496a9774775bb83b97", ssa_ast = "3e1950fcee0e6c4934579a80e523b29a67e0e726c2ba69ac69e8dd1dab345ffd", flattened_ast = "c3f7c6b3931283857948799b4d11b9412953f344430577ee772b44478efdb129", destructured_ast = "fb10d51d9082750f28d8fa059a84816b5ea2245357a855c16d3b32599da42086", inlined_ast = "fb10d51d9082750f28d8fa059a84816b5ea2245357a855c16d3b32599da42086", dce_ast = "fb10d51d9082750f28d8fa059a84816b5ea2245357a855c16d3b32599da42086", bytecode = """
program test.aleo;

function main:
    input r0 as i64.private;
    input r1 as i64.private;
    input r2 as i64.private;
    mul r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

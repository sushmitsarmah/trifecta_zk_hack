namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "62d0d89a5f71f4f9b02fcbd99c875f3dde170938b7836db086a8b8993a1e1d33", unrolled_ast = "62d0d89a5f71f4f9b02fcbd99c875f3dde170938b7836db086a8b8993a1e1d33", ssa_ast = "5a4d113f22deda4de39ae41cbb166a827713a97205a4f51edff749351ccf6c38", flattened_ast = "6d70115e9ce84d40da5e7c61833a1f465b38d2f2caf111a37bcf5bc7e047cd06", destructured_ast = "71ac1903ac008afbc77a08349f222f17e24d7ca7395f1ea42be71ac7f4b3ffa4", inlined_ast = "71ac1903ac008afbc77a08349f222f17e24d7ca7395f1ea42be71ac7f4b3ffa4", dce_ast = "71ac1903ac008afbc77a08349f222f17e24d7ca7395f1ea42be71ac7f4b3ffa4", bytecode = """
program test.aleo;

function main:
    input r0 as i64.private;
    input r1 as i64.private;
    input r2 as i64.private;
    sub r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

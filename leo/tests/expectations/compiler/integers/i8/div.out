namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "e2d4f666c4e5fa82bea942ed344b99341199e42076d318e234f6192505be181a", unrolled_ast = "e2d4f666c4e5fa82bea942ed344b99341199e42076d318e234f6192505be181a", ssa_ast = "546b56ed336b74c595fbaad228f684b5cba9104e727d807cd2f07552a0804c68", flattened_ast = "10de4abc15f893686734c8692a9151e812b3ad582de2db55873ec80228f2176b", destructured_ast = "91e2dc4c5d7914343f521c0e1e4bc23bd935fdd5d3ce0b9c85871fc53e62d98a", inlined_ast = "91e2dc4c5d7914343f521c0e1e4bc23bd935fdd5d3ce0b9c85871fc53e62d98a", dce_ast = "91e2dc4c5d7914343f521c0e1e4bc23bd935fdd5d3ce0b9c85871fc53e62d98a", bytecode = """
program test.aleo;

function main:
    input r0 as i8.private;
    input r1 as i8.private;
    input r2 as i8.private;
    div r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "e3826df3342f985478f31be42eefe0ba3630befd3779a4ba2f168f806b3aaf26", unrolled_ast = "e3826df3342f985478f31be42eefe0ba3630befd3779a4ba2f168f806b3aaf26", ssa_ast = "1c8b633c0ecffe5af9d1a1c2a72fa523a77a235b8068b680c54087995863b3af", flattened_ast = "117322d3c36ccb88f418847a5cc7e94bc7a4ca5141cf9936149061177639d79f", destructured_ast = "2c0bfa61f3ef2eea404ea84be91a062e702852a30cc8cb4208faaf1d4ac94e8e", inlined_ast = "2c0bfa61f3ef2eea404ea84be91a062e702852a30cc8cb4208faaf1d4ac94e8e", dce_ast = "2c0bfa61f3ef2eea404ea84be91a062e702852a30cc8cb4208faaf1d4ac94e8e", bytecode = """
program test.aleo;

function main:
    input r0 as i8.private;
    input r1 as i8.private;
    input r2 as boolean.private;
    gte r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

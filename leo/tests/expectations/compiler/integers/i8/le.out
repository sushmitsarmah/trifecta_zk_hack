namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "0063230de9d7fbd358cad1c53d6583336cb64b399c348894ae19a25033fd604e", unrolled_ast = "0063230de9d7fbd358cad1c53d6583336cb64b399c348894ae19a25033fd604e", ssa_ast = "78fe8e9dd365b2f9f9cf4dd64b020a9a45179054f9a8d6af65b6d1ca887b269f", flattened_ast = "23a6679cd4c5944af49076bea9614344a60d0fae3ec70e4025be62a61f1de4ff", destructured_ast = "6444f15f03f91acef1291cf7ece1f6734f8d82f84d5c3e9fd136e3d08091abac", inlined_ast = "6444f15f03f91acef1291cf7ece1f6734f8d82f84d5c3e9fd136e3d08091abac", dce_ast = "6444f15f03f91acef1291cf7ece1f6734f8d82f84d5c3e9fd136e3d08091abac", bytecode = """
program test.aleo;

function main:
    input r0 as i8.private;
    input r1 as i8.private;
    input r2 as boolean.private;
    lte r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "7bab03f89dddb73c6c58b6ab1033668210f56e83b546b52c6d8115ffbe7ba4b9", unrolled_ast = "7bab03f89dddb73c6c58b6ab1033668210f56e83b546b52c6d8115ffbe7ba4b9", ssa_ast = "6a6a6e42c99d148a2752ad5c6f99f49b84e419423e890151c3123b3fcef0d934", flattened_ast = "ad984f66575dfb99ca5859ac1eff1ab0dcb3bd619e01bb8a231a81d5c16ab566", destructured_ast = "18751b6a9563eeac8de77864c1a4393c90187aae79168addfadbeb0a049850e6", inlined_ast = "18751b6a9563eeac8de77864c1a4393c90187aae79168addfadbeb0a049850e6", dce_ast = "18751b6a9563eeac8de77864c1a4393c90187aae79168addfadbeb0a049850e6", bytecode = """
program test.aleo;

function main:
    input r0 as i8.private;
    input r1 as i8.private;
    input r2 as i8.private;
    sub r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

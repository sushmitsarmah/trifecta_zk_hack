namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "7e34deb1e28eaf03030212286dc82b54ae00fd569d72319d4d3a1a019dfa34d8", unrolled_ast = "7e34deb1e28eaf03030212286dc82b54ae00fd569d72319d4d3a1a019dfa34d8", ssa_ast = "fdc2884ab511557a02270c7da6af68cb729fa072c1cd084f1c9a23b58f744501", flattened_ast = "abaf090a870b221f6b3026a493e758d0c564ea233ae7fa5d963bdf037bf96928", destructured_ast = "c9abfa575e20dae987b08e409a23d895a0f773a4d69bc851588b3d36d184ba42", inlined_ast = "c9abfa575e20dae987b08e409a23d895a0f773a4d69bc851588b3d36d184ba42", dce_ast = "c9abfa575e20dae987b08e409a23d895a0f773a4d69bc851588b3d36d184ba42", bytecode = """
program test.aleo;

function main:
    input r0 as u16.private;
    input r1 as u16.private;
    is.eq r0 r1 into r2;
    assert.eq r2 true;
    output r2 as boolean.private;
""", errors = "", warnings = "" }] }]]

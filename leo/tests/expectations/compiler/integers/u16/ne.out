namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "86e861140280d127ad182d654282a38ca2ec87dd10ee1b7e2f1b569a48122c19", unrolled_ast = "86e861140280d127ad182d654282a38ca2ec87dd10ee1b7e2f1b569a48122c19", ssa_ast = "af61f34815f0c0740b9a6f418cd83921843d3969fd37457abef92813fd56b62b", flattened_ast = "6b52cfb692c3504fbb0b4fe389e2e3def7f530dcec0265e6c66661dab87b1284", destructured_ast = "1e075616e1d2334db51cdc861ef0966b31d77ab84d2a3f5e2bab0e755cf9f356", inlined_ast = "1e075616e1d2334db51cdc861ef0966b31d77ab84d2a3f5e2bab0e755cf9f356", dce_ast = "1e075616e1d2334db51cdc861ef0966b31d77ab84d2a3f5e2bab0e755cf9f356", bytecode = """
program test.aleo;

function main:
    input r0 as u16.private;
    input r1 as u16.private;
    input r2 as boolean.private;
    is.neq r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "5076e8aceb97562a76f7a15ec89a551d732ad00714c8f6131944b5a652e9e886", unrolled_ast = "5076e8aceb97562a76f7a15ec89a551d732ad00714c8f6131944b5a652e9e886", ssa_ast = "1495cff87b57115a3c78ef3be1a584e6af4670d727d4b6d300220a9f38a643a1", flattened_ast = "603426fb0fd37a71132d18b432718610c74eb172419a3fc81bc72bbcb8cc758e", destructured_ast = "9b47bc3371a4b105be8e478d6e7d5af9276b1210d237e30d43ddb065a50748c4", inlined_ast = "9b47bc3371a4b105be8e478d6e7d5af9276b1210d237e30d43ddb065a50748c4", dce_ast = "b3801510ba00f29bbd0f02c720caf9b4b254de82537df578e89cc809be0dea0a", bytecode = """
program test.aleo;

function main:
    input r0 as u16.private;
    input r1 as u16.private;
    is.eq r0 r1 into r2;
    output r2 as boolean.private;
""", errors = "", warnings = "" }] }]]

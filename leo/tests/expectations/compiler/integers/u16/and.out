namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "d385bfa59f684e7baf62a91517a12274a1a5331eb3924b76e30a6a04e8728059", unrolled_ast = "d385bfa59f684e7baf62a91517a12274a1a5331eb3924b76e30a6a04e8728059", ssa_ast = "6d0ebbea535eba8896194651ce65c1d6ae1558cf04540dbaf57e3e860b944ee3", flattened_ast = "d20bf0f1aca0778e057a768ee09ee6f406f0d5159b894a3c38f727515faf38ef", destructured_ast = "e33f0cad47802a7c6b00493f05ac006b20f193171b0d5387cabfeeff5a393601", inlined_ast = "e33f0cad47802a7c6b00493f05ac006b20f193171b0d5387cabfeeff5a393601", dce_ast = "e33f0cad47802a7c6b00493f05ac006b20f193171b0d5387cabfeeff5a393601", bytecode = """
program test.aleo;

function main:
    input r0 as u16.private;
    input r1 as u16.private;
    input r2 as u16.private;
    and r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

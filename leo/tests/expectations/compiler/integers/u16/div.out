namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "ae2ddc3a870ed99f88e4d3e5290c14595e44f8363c796f035240a0d8d87fa967", unrolled_ast = "ae2ddc3a870ed99f88e4d3e5290c14595e44f8363c796f035240a0d8d87fa967", ssa_ast = "a67178cf8881c9c808d684fee85c8e3de30c07e1418258ea2dec20089a58b786", flattened_ast = "149fb678292e8aa63f457fb3d4d508f82e2a2d10b17ad75466f98900942d2267", destructured_ast = "d5e009e2e70a04b283b1016562d0167fc1cb0608151616b203264b9da5850857", inlined_ast = "d5e009e2e70a04b283b1016562d0167fc1cb0608151616b203264b9da5850857", dce_ast = "d5e009e2e70a04b283b1016562d0167fc1cb0608151616b203264b9da5850857", bytecode = """
program test.aleo;

function main:
    input r0 as u16.private;
    input r1 as u16.private;
    input r2 as u16.private;
    div r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

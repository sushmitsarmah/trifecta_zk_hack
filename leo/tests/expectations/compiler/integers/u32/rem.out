namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "659e12ed51dbbc9e3e80752854a5167741a7deb18e361306072cf86f6def9378", unrolled_ast = "659e12ed51dbbc9e3e80752854a5167741a7deb18e361306072cf86f6def9378", ssa_ast = "12ed4cdf9c33a2959c712359469d64dae7aa2c66032c15138b8dde9f31dc5dbb", flattened_ast = "0aef2fbd03994a0dbdbb067e167e246a6c03d27ea54908357cfcaf2badf94946", destructured_ast = "2fe4e113acb285aaf0547937a5aa63bb1c4885e8cb959d9c84846bc8d83836d0", inlined_ast = "2fe4e113acb285aaf0547937a5aa63bb1c4885e8cb959d9c84846bc8d83836d0", dce_ast = "2fe4e113acb285aaf0547937a5aa63bb1c4885e8cb959d9c84846bc8d83836d0", bytecode = """
program test.aleo;

function main:
    input r0 as u32.private;
    input r1 as u32.private;
    input r2 as u32.private;
    rem r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

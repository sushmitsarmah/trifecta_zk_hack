namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "4ab0d85d10c2e0e82a4acd245606459aac2db567b67e7006f27b3fc520464acd", unrolled_ast = "4ab0d85d10c2e0e82a4acd245606459aac2db567b67e7006f27b3fc520464acd", ssa_ast = "463be3766f9720530ba482a1d25c7ca4b5e6ea65226b74bf7517bebea8e9480f", flattened_ast = "50c266396ffd543f6513374aa4cf3c4c6aad8576e330fc5111528853c47e2915", destructured_ast = "a584edf402a78cf3a316eeec3d376fb0ab42ce189dbe965c10bafa7f0600a1fd", inlined_ast = "a584edf402a78cf3a316eeec3d376fb0ab42ce189dbe965c10bafa7f0600a1fd", dce_ast = "a584edf402a78cf3a316eeec3d376fb0ab42ce189dbe965c10bafa7f0600a1fd", bytecode = """
program test.aleo;

function main:
    input r0 as i32.private;
    sub 2147483647i32 r0 into r1;
    output r1 as i32.private;
""", errors = "", warnings = "" }] }]]

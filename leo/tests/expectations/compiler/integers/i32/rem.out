namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "0cc0e6cea813f906abfa35117404ec428961e3e2bcd6f35fd92e37ed1c8663f7", unrolled_ast = "0cc0e6cea813f906abfa35117404ec428961e3e2bcd6f35fd92e37ed1c8663f7", ssa_ast = "7e9b42f58fd67b703c4d20dea6da6d24fc4ee178d62f68218828c96a6b696a03", flattened_ast = "8860a778786e10b922e114bbcf31305539d5e09ffae176054a39b1a0f2dddb5d", destructured_ast = "6d68ce128df6209b39e837ff87f5f1fbd8e2523fb965ca9001c02fd78b7b1350", inlined_ast = "6d68ce128df6209b39e837ff87f5f1fbd8e2523fb965ca9001c02fd78b7b1350", dce_ast = "6d68ce128df6209b39e837ff87f5f1fbd8e2523fb965ca9001c02fd78b7b1350", bytecode = """
program test.aleo;

function main:
    input r0 as i32.private;
    input r1 as i32.private;
    input r2 as i32.private;
    rem r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "b9547796a72872467fcf1dc23cb7fab9faa3384f82ecddbfc652fc37602ba2f5", unrolled_ast = "b9547796a72872467fcf1dc23cb7fab9faa3384f82ecddbfc652fc37602ba2f5", ssa_ast = "2d5267193d78ca01d95362840d84052f846c16c287a6ffb405c4e4b1a31f744f", flattened_ast = "c71c8899a4a2000b54e348eac03181f96e25fceb6a05b1e7fee5acec38e25835", destructured_ast = "01402129008422974cb9a1561be70439e751f9a4f1623fa986e8c7100980f2b3", inlined_ast = "01402129008422974cb9a1561be70439e751f9a4f1623fa986e8c7100980f2b3", dce_ast = "01402129008422974cb9a1561be70439e751f9a4f1623fa986e8c7100980f2b3", bytecode = """
program test.aleo;

function main:
    input r0 as boolean.private;
    sub -32767i16 2i16 into r1;
    output r1 as i16.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "7e0064f246356a7ff33274423620c3f47ae369132d440b4c34c9beb2a526bd7f", unrolled_ast = "7e0064f246356a7ff33274423620c3f47ae369132d440b4c34c9beb2a526bd7f", ssa_ast = "3cf17e37c8b7809f7201c566404da558ff53211bd67bcefd7a9410626d6c13d3", flattened_ast = "d050c38ea3e92aa63b796eb0317f920753fbb0de6bd3755a2cb651d8d8f0366d", destructured_ast = "236aabb1766a47171bbe9cff06db9414d820d183480a30a9b32232b0fb2f4cf5", inlined_ast = "236aabb1766a47171bbe9cff06db9414d820d183480a30a9b32232b0fb2f4cf5", dce_ast = "236aabb1766a47171bbe9cff06db9414d820d183480a30a9b32232b0fb2f4cf5", bytecode = """
program test.aleo;

function main:
    input r0 as i16.private;
    input r1 as i16.private;
    input r2 as i16.private;
    and r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

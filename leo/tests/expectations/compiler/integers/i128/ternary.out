namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "ed5862f46b7b3ef3addca4454ba225646fd1d9cc800a5a4f8d585d631d9d36f6", unrolled_ast = "ed5862f46b7b3ef3addca4454ba225646fd1d9cc800a5a4f8d585d631d9d36f6", ssa_ast = "17e1a255732c391dfff6fa4fd03f076cef97983916d270fece8cb17fb7bcdfb8", flattened_ast = "79798fc4c657bf4b1f316db4fc70e3be0fef1add5157f39a97bc89abb16c1ae5", destructured_ast = "72361c470c5bacf68944f864aa46d0a26eacecf977d4e3ffaec18f3ad6a58ae9", inlined_ast = "72361c470c5bacf68944f864aa46d0a26eacecf977d4e3ffaec18f3ad6a58ae9", dce_ast = "72361c470c5bacf68944f864aa46d0a26eacecf977d4e3ffaec18f3ad6a58ae9", bytecode = """
program test.aleo;

function main:
    input r0 as boolean.private;
    input r1 as i128.private;
    input r2 as i128.private;
    input r3 as i128.private;
    ternary r0 r1 r2 into r4;
    is.eq r4 r3 into r5;
    output r5 as boolean.private;
""", errors = "", warnings = "" }] }]]

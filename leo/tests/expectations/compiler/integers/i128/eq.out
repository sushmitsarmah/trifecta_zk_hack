namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "9caa89e0cba4c18f15c38b23a5e9900bcefec8136de6838cbd5667d9836b862f", unrolled_ast = "9caa89e0cba4c18f15c38b23a5e9900bcefec8136de6838cbd5667d9836b862f", ssa_ast = "64963113917d17c9887355e5440b51d6d85512fd54bfa536c54cbec21d4fc3b1", flattened_ast = "5d5cd3e01fa92f2b34ecaece9cf31a454ba43a54dbfd2c36aed776ab3724028c", destructured_ast = "13495b4e09495dfb6e64a253e11985be62574a74463efdc5bd561807e756fb03", inlined_ast = "13495b4e09495dfb6e64a253e11985be62574a74463efdc5bd561807e756fb03", dce_ast = "13495b4e09495dfb6e64a253e11985be62574a74463efdc5bd561807e756fb03", bytecode = """
program test.aleo;

function main:
    input r0 as i128.private;
    input r1 as i128.private;
    input r2 as boolean.private;
    is.eq r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "366d4b0df2cf6d2263b2fd00b3113becf91de4616e8bf5f86684454bebb2cff2", unrolled_ast = "366d4b0df2cf6d2263b2fd00b3113becf91de4616e8bf5f86684454bebb2cff2", ssa_ast = "452a3ded08bdc82a4137f6c83de0d686f794d2628c2f08b8c59570531fbd175c", flattened_ast = "a6787b875bc922630b77f26b2dec98af36ed818d825c4eafff0b00bfacead1dc", destructured_ast = "076206dd1b4a83be588251a571ec952d8ba5771da531a287fe56d36e1dca5e02", inlined_ast = "076206dd1b4a83be588251a571ec952d8ba5771da531a287fe56d36e1dca5e02", dce_ast = "076206dd1b4a83be588251a571ec952d8ba5771da531a287fe56d36e1dca5e02", bytecode = """
program test.aleo;

function main:
    input r0 as i128.private;
    input r1 as i128.private;
    input r2 as i128.private;
    sub r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

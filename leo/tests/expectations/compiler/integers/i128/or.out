namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "78919e6578921ffa218740e345e4baed63a27d685f2fa1dbc1b1e579cf0ea411", unrolled_ast = "78919e6578921ffa218740e345e4baed63a27d685f2fa1dbc1b1e579cf0ea411", ssa_ast = "5ad943b23279ea25edc0ddf58fb553f83e7f648767dd09ed22413d89a4d68a61", flattened_ast = "79657df1a9610f5a711d553b9fe2e165ed2127cbd09b8c9a2d4edcac6bc99524", destructured_ast = "6d57ec018d170d14bb56314ac05d00d7331d4a6a8bb8613169d23dd491abdc22", inlined_ast = "6d57ec018d170d14bb56314ac05d00d7331d4a6a8bb8613169d23dd491abdc22", dce_ast = "6d57ec018d170d14bb56314ac05d00d7331d4a6a8bb8613169d23dd491abdc22", bytecode = """
program test.aleo;

function main:
    input r0 as i128.private;
    input r1 as i128.private;
    input r2 as i128.private;
    or r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

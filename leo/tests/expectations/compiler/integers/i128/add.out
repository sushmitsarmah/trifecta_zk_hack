namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "ea1ce28c4816984ad4bc9f93e477a438d5309686ba2f2313eaec7d3fdb7a2af3", unrolled_ast = "ea1ce28c4816984ad4bc9f93e477a438d5309686ba2f2313eaec7d3fdb7a2af3", ssa_ast = "7b96c27836ae377f3f645c66a013d022938dbb74f9d0bcb194b0c4af4fd7b845", flattened_ast = "574c59799ae92538c78300a4c37120d4fa6e1d187e6c0c1db15c323a07ffeddd", destructured_ast = "c41c7fd4e02ef38a56c1f1b1a3247d3527a222bf8055ff3edf0d85662e5fbd89", inlined_ast = "c41c7fd4e02ef38a56c1f1b1a3247d3527a222bf8055ff3edf0d85662e5fbd89", dce_ast = "c41c7fd4e02ef38a56c1f1b1a3247d3527a222bf8055ff3edf0d85662e5fbd89", bytecode = """
program test.aleo;

function main:
    input r0 as i128.private;
    input r1 as i128.private;
    input r2 as i128.private;
    add r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

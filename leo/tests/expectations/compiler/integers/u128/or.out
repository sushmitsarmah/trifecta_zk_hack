namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "da2fbc5bbed7ab4513c0340c1fc42ac41e94c5bb22bd452b67e4a02c28979738", unrolled_ast = "da2fbc5bbed7ab4513c0340c1fc42ac41e94c5bb22bd452b67e4a02c28979738", ssa_ast = "d08948c78c9205b0838ce2ecb26f5e995f7a2f3dff99baa4409cfd9b52c8be37", flattened_ast = "acf8f2ec26e420c388586e6fb883a88e90cb3144be8cc5d48dea171e0b63b8b0", destructured_ast = "39208d78b1606e9d247df8fe2a09149cce41f0bf0c02c06635367ea7b82d8d6a", inlined_ast = "39208d78b1606e9d247df8fe2a09149cce41f0bf0c02c06635367ea7b82d8d6a", dce_ast = "39208d78b1606e9d247df8fe2a09149cce41f0bf0c02c06635367ea7b82d8d6a", bytecode = """
program test.aleo;

function main:
    input r0 as u128.private;
    input r1 as u128.private;
    input r2 as u128.private;
    or r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

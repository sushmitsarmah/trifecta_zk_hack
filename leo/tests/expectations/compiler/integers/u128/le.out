namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "4b9a54bbc841fc722911e6184211bd06fea233dbacf9654ff60de53ed1828fde", unrolled_ast = "4b9a54bbc841fc722911e6184211bd06fea233dbacf9654ff60de53ed1828fde", ssa_ast = "b806245da8ff0e71f7ef7649150774b86f688322b317503bea36fe03903bac2a", flattened_ast = "13c9473632dba6262c5e25fec7815c8d3a270c23879a58f11068eac64630b169", destructured_ast = "cf992d3a620a1bdd5866165ffa47b6b5f81db32a30037948eb5384ab4da07d9b", inlined_ast = "cf992d3a620a1bdd5866165ffa47b6b5f81db32a30037948eb5384ab4da07d9b", dce_ast = "cf992d3a620a1bdd5866165ffa47b6b5f81db32a30037948eb5384ab4da07d9b", bytecode = """
program test.aleo;

function main:
    input r0 as u128.private;
    input r1 as u128.private;
    input r2 as boolean.private;
    lte r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "06e22df9c4c860e037e401390ade75ff633b29f25a8b04285ca27b24ebbfa03b", unrolled_ast = "06e22df9c4c860e037e401390ade75ff633b29f25a8b04285ca27b24ebbfa03b", ssa_ast = "7e4b2bbad73a438a6305ca4ab8e15f3c3dc2dbc166a47787d03ca8155e8aad62", flattened_ast = "e243f82d11e96c47e83665996c8a2b926319539da6f8aaf36aa46ed0f6455cea", destructured_ast = "ea5a44bd55844e64e76a59f244352cfe20c7b2eb17bc1d2efcb34cdd938b0048", inlined_ast = "ea5a44bd55844e64e76a59f244352cfe20c7b2eb17bc1d2efcb34cdd938b0048", dce_ast = "ea5a44bd55844e64e76a59f244352cfe20c7b2eb17bc1d2efcb34cdd938b0048", bytecode = """
program test.aleo;

function main:
    input r0 as u128.private;
    input r1 as u128.private;
    input r2 as u128.private;
    add r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

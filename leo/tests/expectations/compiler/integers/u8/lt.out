namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "de77df23c9d30e71d986f8104d6b6e6b0bbd9b76ff5a10f291f3a3d5dbb6abbf", unrolled_ast = "de77df23c9d30e71d986f8104d6b6e6b0bbd9b76ff5a10f291f3a3d5dbb6abbf", ssa_ast = "0643a094ef54eb43c0f81b2662953dc25080c26c3dc7e0a0673a398c2a0956d7", flattened_ast = "309de39adb3e4f3a44fb80f5b78ebf52ee323138ad3ade323b6fbd2268e2fddd", destructured_ast = "19d1f616371dd930005d037dcde64bdcd86184a2072525dfcf3f18a5cbb96acd", inlined_ast = "19d1f616371dd930005d037dcde64bdcd86184a2072525dfcf3f18a5cbb96acd", dce_ast = "19d1f616371dd930005d037dcde64bdcd86184a2072525dfcf3f18a5cbb96acd", bytecode = """
program test.aleo;

function main:
    input r0 as u8.private;
    input r1 as u8.private;
    input r2 as boolean.private;
    lt r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

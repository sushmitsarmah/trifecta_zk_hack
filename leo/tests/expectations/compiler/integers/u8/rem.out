namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "d880d339baa9129adc8ac81aab9288cc026d355e88d06cce937a1f8f29d70789", unrolled_ast = "d880d339baa9129adc8ac81aab9288cc026d355e88d06cce937a1f8f29d70789", ssa_ast = "a86b4de1b11faae94992887f1354892875a970a0f516dfd52a81fcb2d025dc30", flattened_ast = "d21f0e6859f7df648546a64f092fa55ea8de0bd34c384c94482c9505113805bc", destructured_ast = "010d8bd5cba0069cdceb16f85cc6cd0014cf33f7c3e1b44d135977be6985156a", inlined_ast = "010d8bd5cba0069cdceb16f85cc6cd0014cf33f7c3e1b44d135977be6985156a", dce_ast = "010d8bd5cba0069cdceb16f85cc6cd0014cf33f7c3e1b44d135977be6985156a", bytecode = """
program test.aleo;

function main:
    input r0 as u8.private;
    input r1 as u8.private;
    input r2 as u8.private;
    rem r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

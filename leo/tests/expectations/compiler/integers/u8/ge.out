namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "0643e6bb83c5813b9305374057f7dbcdda1c852d790b7e26b1c09282460aa593", unrolled_ast = "0643e6bb83c5813b9305374057f7dbcdda1c852d790b7e26b1c09282460aa593", ssa_ast = "bb375590f4ffe518b374a9684faf0a7ae3860fbbca5ddbd33d0aff01f23cc270", flattened_ast = "4bb471d022fa068e0f1e92cabc2a14a92fad07967afeea684f75a5dcfceaeaba", destructured_ast = "750e038a3eea938df2761d40fae0112410a4378631a4dc2749b5daad0711f106", inlined_ast = "750e038a3eea938df2761d40fae0112410a4378631a4dc2749b5daad0711f106", dce_ast = "750e038a3eea938df2761d40fae0112410a4378631a4dc2749b5daad0711f106", bytecode = """
program test.aleo;

function main:
    input r0 as u8.private;
    input r1 as u8.private;
    input r2 as boolean.private;
    gte r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

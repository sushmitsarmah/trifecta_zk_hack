namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "e8c1ffed1513ed588bad03e97e624a52cae280d87167bf79d62569423c72180e", unrolled_ast = "e8c1ffed1513ed588bad03e97e624a52cae280d87167bf79d62569423c72180e", ssa_ast = "d713cc8f14e36e0134521ffd687dfd398af38643efb5c7205bad1974a20605f5", flattened_ast = "93eabab2793b715e24f4d1f83e5adaadeb1ed0eaf6f43f0425d5f96f21a11eea", destructured_ast = "477abaf1bee32aa6df5740ab665a24eb4d1acccedf3dcab8eda0d0678558f636", inlined_ast = "477abaf1bee32aa6df5740ab665a24eb4d1acccedf3dcab8eda0d0678558f636", dce_ast = "2a0caf9aaf58b071308418fc46f96b1393f7646ca329bc6676e860357699ce3b", bytecode = """
program test.aleo;

function main:
    input r0 as u8.private;
    input r1 as u8.private;
    is.eq r0 r1 into r2;
    output r2 as boolean.private;
""", errors = "", warnings = "" }] }]]

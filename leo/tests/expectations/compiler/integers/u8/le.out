namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "40fd0b9fee40db3931426f77ba6151140b10e04642564781568a1ad8c5ca2b2f", unrolled_ast = "40fd0b9fee40db3931426f77ba6151140b10e04642564781568a1ad8c5ca2b2f", ssa_ast = "bc8eb1e49a60a35068ca83212e377b9f036d21e33be2afb400c985c5d725e29a", flattened_ast = "308db0e049dabca214fd07a84b47b12513b5e0f4ecd709bb0f489a4c21beb6bc", destructured_ast = "8b966c6b600900ed36d4ca25106f9304e2e3386d0eb285199bed89b9a8369d49", inlined_ast = "8b966c6b600900ed36d4ca25106f9304e2e3386d0eb285199bed89b9a8369d49", dce_ast = "8b966c6b600900ed36d4ca25106f9304e2e3386d0eb285199bed89b9a8369d49", bytecode = """
program test.aleo;

function main:
    input r0 as u8.private;
    input r1 as u8.private;
    input r2 as boolean.private;
    lte r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

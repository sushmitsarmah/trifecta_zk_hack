namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "b0c7e43c348c58446bd6281876a87a105555dab7c33a09542a97d907a4a24bba", unrolled_ast = "b0c7e43c348c58446bd6281876a87a105555dab7c33a09542a97d907a4a24bba", ssa_ast = "f107cc7f828eeff9e367dc11309e071515b81a8c73179e566570b9bdb9eecb71", flattened_ast = "4385eaa0ec21b5d03b26907fa1d1873e57f34ac324d8a03741d292d3333c99df", destructured_ast = "1fb778c79b6439ad16cc30dd005f107de945b2894c09686527e897907c5381ce", inlined_ast = "1fb778c79b6439ad16cc30dd005f107de945b2894c09686527e897907c5381ce", dce_ast = "1fb778c79b6439ad16cc30dd005f107de945b2894c09686527e897907c5381ce", bytecode = """
program test.aleo;

function main:
    input r0 as u64.private;
    input r1 as u64.private;
    input r2 as u64.private;
    sub r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

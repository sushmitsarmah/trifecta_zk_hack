namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "d626a36703c05f7909dca320c24da5cafd636f79d782d5adbef2a1aa617a8fc7", unrolled_ast = "d626a36703c05f7909dca320c24da5cafd636f79d782d5adbef2a1aa617a8fc7", ssa_ast = "5d1abfb1f06876b476ec7a25335bb21cb85d4e52e13295b379f25373f28a7bb1", flattened_ast = "031b82e778118a0bb460635c492c816b6829734c846079cf1c443923fb72cde7", destructured_ast = "56f9a6b1378e29eba30cbc3f2aa8bee17ffd795713c7b87344cd50b145ad8015", inlined_ast = "56f9a6b1378e29eba30cbc3f2aa8bee17ffd795713c7b87344cd50b145ad8015", dce_ast = "56f9a6b1378e29eba30cbc3f2aa8bee17ffd795713c7b87344cd50b145ad8015", bytecode = """
program test.aleo;

function main:
    input r0 as u64.private;
    input r1 as u64.private;
    input r2 as u64.private;
    mul r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

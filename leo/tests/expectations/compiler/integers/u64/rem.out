namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "1a6a1c2e6e7477bb85cc1070ad53e8a66e45ee3f5d6c58011ebacc16f96ac1a6", unrolled_ast = "1a6a1c2e6e7477bb85cc1070ad53e8a66e45ee3f5d6c58011ebacc16f96ac1a6", ssa_ast = "da64a6818ac99c8f49202cf18d90551596c95d0bd29b8576c6edcd3587220e0d", flattened_ast = "e0456e0d7b4a21960712b144691a28714728ff64ef19d0c24df84b9f182e1d6f", destructured_ast = "da92ddffc2273e1ff903bab72f6127e084fa3d3b89afa5a4d0dc70f201eab00b", inlined_ast = "da92ddffc2273e1ff903bab72f6127e084fa3d3b89afa5a4d0dc70f201eab00b", dce_ast = "da92ddffc2273e1ff903bab72f6127e084fa3d3b89afa5a4d0dc70f201eab00b", bytecode = """
program test.aleo;

function main:
    input r0 as u64.private;
    input r1 as u64.private;
    input r2 as u64.private;
    rem r0 r1 into r3;
    is.eq r3 r2 into r4;
    output r4 as boolean.private;
""", errors = "", warnings = "" }] }]]

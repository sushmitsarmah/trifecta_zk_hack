namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "ddcade130b97232e81a92e409dab49f3613bf69adc5249dfc75b9724c92e93bd", unrolled_ast = "ddcade130b97232e81a92e409dab49f3613bf69adc5249dfc75b9724c92e93bd", ssa_ast = "fad6bfe8402e95da9e1856c8cd178d04e0cd923def36816084bb39df6c61799a", flattened_ast = "b6f79f1974c133e44f6504fd4d217e977e2b0059ce4833a8b68f7ae4397a04a4", destructured_ast = "1d651670d8950f7df08f07b7b321cb27e7f6650714915d35b18d6433d3a958ab", inlined_ast = "1d651670d8950f7df08f07b7b321cb27e7f6650714915d35b18d6433d3a958ab", dce_ast = "1d651670d8950f7df08f07b7b321cb27e7f6650714915d35b18d6433d3a958ab", bytecode = """
program test.aleo;

function main:
    input r0 as scalar.private;
    mul 0group r0 into r1;
    output r1 as group.private;
""", errors = "", warnings = "" }] }]]

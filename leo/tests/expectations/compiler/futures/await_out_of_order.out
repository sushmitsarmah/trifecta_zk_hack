namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [
    { initial_ast = "713c85bcb7d5fef43e4626a09e4fe3858f76de6025fcae475cb0398c26b5d123", unrolled_ast = "713c85bcb7d5fef43e4626a09e4fe3858f76de6025fcae475cb0398c26b5d123", ssa_ast = "5e2a213bd10e28dad299e0e48ac3336484fd2ffd894eeb63d15d67e6af65195e", flattened_ast = "11828763a38326b604155e1074699e6ca85205fbc83167d554624d0fe5d8bb2b", destructured_ast = "83c9eaa9aef53de6143980c9e001e59da64c291a7b2aa0693139b868339e589c", inlined_ast = "dda1aade2a50a9f25571004c8a68e3ff90efadd6a567ce25b1edbbd2e82b59d7", dce_ast = "dda1aade2a50a9f25571004c8a68e3ff90efadd6a567ce25b1edbbd2e82b59d7", bytecode = """
program test.aleo;

mapping foo:
    key as u32.public;
    value as u32.public;

function main_inner:
    input r0 as u32.public;
    input r1 as u32.public;
    async main_inner r0 r1 into r2;
    output r2 as test.aleo/main_inner.future;

finalize main_inner:
    input r0 as u32.public;
    input r1 as u32.public;
    set r1 into foo[r0];
""", errors = "", warnings = "" },
    { initial_ast = "c1dddbcc56c1c3e89c4633a45eac54ca710cbb206f002e3cc8a4312342d5e43e", unrolled_ast = "5d36db1cb3683311b3fc48abe0aa1c0d00f70cb6daa63062503f2ecd6a8ddf16", ssa_ast = "c323c83acd7a96d33ba5280eec11c930b947488463b6efe18b97e1dfed81262f", flattened_ast = "4b2ba34db617065c4494605087eacc13b51daedf836f04477f963452971a2ce2", destructured_ast = "41660b5663fe50591ad7e4cdb00e52c21e6bc6e25a00de8641be514ee7151c50", inlined_ast = "48a016247539160fd5fba60c1deddf6aa789216f7db9a4d5004513de19859e78", dce_ast = "48a016247539160fd5fba60c1deddf6aa789216f7db9a4d5004513de19859e78", bytecode = """
import test.aleo;
program basic.aleo;

function main:
    input r0 as u32.public;
    input r1 as u32.private;
    call test.aleo/main_inner 0u32 0u32 into r2;
    call test.aleo/main_inner 1u32 1u32 into r3;
    async main r2 r3 into r4;
    output r4 as basic.aleo/main.future;

finalize main:
    input r0 as test.aleo/main_inner.future;
    input r1 as test.aleo/main_inner.future;
    await r1;
    await r0;
""", errors = "", warnings = """
Warning [WSAZ0374003]: The future `f2` is not awaited in the order in which they were passed in to the `async` function.
    --> compiler-test:13:9
     |
  13 |         f2.await();
     |         ^^
     |
     = While it is not required for futures to be awaited in order, there is some specific behavior that arises, which may affect the semantics of your program. See `https://github.com/AleoNet/snarkVM/issues/2570` for more context.""" },
] }]]

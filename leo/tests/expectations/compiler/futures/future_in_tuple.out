namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [
    { initial_ast = "6af04f6b10b40e3a7a009f117b421ef20ad0880ce93b39f1b937ac56f73ff716", unrolled_ast = "6af04f6b10b40e3a7a009f117b421ef20ad0880ce93b39f1b937ac56f73ff716", ssa_ast = "bd6e87c40965e9f226bb1dc02eec03b4e14a49ba7074dddde28892450e1d8055", flattened_ast = "70ec82dd9d900730d205808c1ddbc5bd518eeff1923affb1ba44bbbaacacdd4a", destructured_ast = "5b84345de4733be9724fa0f7e20c690a27d464b1ce772f6d48e968d1698ecfe5", inlined_ast = "e4c45e5f0b96b26bcb0208c941da8646c6170baecb7da48acc6d033e7e3d4221", dce_ast = "e4c45e5f0b96b26bcb0208c941da8646c6170baecb7da48acc6d033e7e3d4221", bytecode = """
program credits.aleo;

record credits:
    owner as address.private;
    amount as u64.private;

function transfer_private_to_public:
    input r0 as credits.record;
    input r1 as address.private;
    input r2 as u64.private;
    async transfer_private_to_public into r3;
    output r0 as credits.record;
    output r3 as credits.aleo/transfer_private_to_public.future;

finalize transfer_private_to_public:
    assert.eq 1u8 1u8;
""", errors = "", warnings = "" },
    { initial_ast = "fc9f1985c1e0441e9423e67cfd4cb8252178ccc236dfabae17187c5a5cc98ebe", unrolled_ast = "2f557fd9b7674c7913c0e2ec0806746be520ff411a8379dd19570f3842ec8e58", ssa_ast = "12a07dc0d85342f7966c74eabf1f0ac7493b8502c047e91a28c3cdbd430dcb68", flattened_ast = "c23c5d92159689340404ec5d3af4834250f461499ff48cae2b22569ad2aa0953", destructured_ast = "4b99052729258281af2381dd497498eef903b97ef0c2eb98bfa13fc3885575be", inlined_ast = "f25c9bb64c9d34ed1d7afa7884ab2ef6c4f19a7fe206e31bae5d3b2b817693c0", dce_ast = "f25c9bb64c9d34ed1d7afa7884ab2ef6c4f19a7fe206e31bae5d3b2b817693c0", bytecode = """
import credits.aleo;
program test_credits.aleo;

function send_credits:
    input r0 as credits.aleo/credits.record;
    input r1 as u64.private;
    call credits.aleo/transfer_private_to_public r0 test_credits.aleo r1 into r2 r3;
    async send_credits r3 into r4;
    output r2 as credits.aleo/credits.record;
    output r4 as test_credits.aleo/send_credits.future;

finalize send_credits:
    input r0 as credits.aleo/transfer_private_to_public.future;
    await r0;
""", errors = "", warnings = "" },
] }]]

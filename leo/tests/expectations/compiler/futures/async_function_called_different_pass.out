namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [
    { initial_ast = "cb6d1eff2298c1dee7f2bc65d6e203470d57210ffc73719bea5e48429f847e13", unrolled_ast = "cb6d1eff2298c1dee7f2bc65d6e203470d57210ffc73719bea5e48429f847e13", ssa_ast = "0e747caf8153239dad71db6d5a38c240a9142916de8fc81fa23e4dc250eba0c3", flattened_ast = "1c74eab40108fdb4ba6e64329e8181bc46124e04d1f3586010aa9ae1e0b7bb50", destructured_ast = "e0159890281a8caba73575c5459df7d65ca192e08c6ea854958db1e63bdb4cd3", inlined_ast = "2daddd4cba93a204999baeeba59a8849af6b8e5ab9ecf5cb0bce3f517eb6f245", dce_ast = "2daddd4cba93a204999baeeba59a8849af6b8e5ab9ecf5cb0bce3f517eb6f245", bytecode = """
program dependent.aleo;

function t1:
    async t1 1u8 into r0;
    output r0 as dependent.aleo/t1.future;

finalize t1:
    input r0 as u8.public;
    assert.eq 1u8 1u8;

function t2:
    async t2 1u8 into r0;
    output r0 as dependent.aleo/t2.future;

finalize t2:
    input r0 as u8.public;
    assert.eq 1u8 1u8;
""", errors = "", warnings = "" },
    { initial_ast = "238c544d4163b282538059e926859185e41484db766796db1bcc98972bad6827", unrolled_ast = "671102c597941fbe7b00c18754016acadfaa33021adc33a969f7cdba17193bbb", ssa_ast = "224deecbea8833261599615dace2bda4456b9551e98fc0f8e34f8d610663c5c6", flattened_ast = "a48f30c0aa6faa000b66b4aac721431a40bec78c2423a657ae387fe757abe2a2", destructured_ast = "eaa7eb7c1de0da3875899845fd9ff9c780ff8363c847c702673a2fa83df9d6e5", inlined_ast = "03dbe2682f87a008585c22087c86c65269e664fd51f85f2d68607b6b999fc7e8", dce_ast = "9de570a0995705c79fe8805304a8cbfee0620f4d3fd60e908c7dc638312055de", bytecode = """
import dependent.aleo;
program test.aleo;

function t1:
    call dependent.aleo/t1 into r0;
    async t1 r0 into r1;
    output r1 as test.aleo/t1.future;

finalize t1:
    input r0 as dependent.aleo/t1.future;
    await r0;

function t2:
    call dependent.aleo/t2 into r0;
    async t2 r0 into r1;
    output r1 as test.aleo/t2.future;

finalize t2:
    input r0 as dependent.aleo/t2.future;
    await r0;
""", errors = "", warnings = "" },
] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "1e241a1f7a1a0490bab43f3d4b4f249d67f5d217b6d28661262b07d6159ba4df", unrolled_ast = "ed68223f593591a8b0aafa66ed4313ddc3df3f7c46042f8493ed16bebb803017", ssa_ast = "3f9e022c9faec47b6cdddefb837f4570ba3bcce2ac15f27b98d242a32243fc91", flattened_ast = "bcd1979576c05438907886bd70ed3397d2c61bf9eefc87bef864971a48b4de2d", destructured_ast = "bde3973357ffbef5882f61a5121c3017a1141b574d5319f24f9fe9d7510c2a32", inlined_ast = "f88f4bf88c418e5f1ac98be66b65b8a11205b187b32095fb68130a3dd5057d1f", dce_ast = "f88f4bf88c418e5f1ac98be66b65b8a11205b187b32095fb68130a3dd5057d1f", bytecode = """
program test.aleo;

mapping mfield:
    key as field.public;
    value as field.public;

mapping mgroup:
    key as group.public;
    value as group.public;

mapping mu32:
    key as u32.public;
    value as u32.public;

function main:
    async main into r0;
    output r0 as test.aleo/main.future;

finalize main:
    set 3236679066651405816080778725233890125628939339772420925284755583710370794371field into mfield[5790452939377792755765199267124367999665041371398929631131254663397134656511field];
    set 6108511972326079101406626541757505382902231607391431570208365002437568455742group into mgroup[6245268830463555179812861046132051182013738772733163565331565952498608839676group];
    set 401375299u32 into mu32[194685703u32];
""", errors = "", warnings = "" }] }]]

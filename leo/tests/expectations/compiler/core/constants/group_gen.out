namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "8288afbe9d76576eebdb237192bb20545ee1da09c2b1ece78668c52e3dc4a134", unrolled_ast = "72246b63a67f5e3dc18d1a6a0b485aba53d69657e14d5b1f5d51ee1fac812169", ssa_ast = "08f8dff2613d65b86359a0d052dae7b70f1e4185658fcbbc225aad4be23dbd09", flattened_ast = "5447f5a69ef06607d402f8db9c076aa0bd4ad4f717dd8174a27b3bb6b635966a", destructured_ast = "e0fe8c8c8107c93702e00ecca872ee35772bca7f737216325c679bac360ecc5c", inlined_ast = "e0fe8c8c8107c93702e00ecca872ee35772bca7f737216325c679bac360ecc5c", dce_ast = "e0fe8c8c8107c93702e00ecca872ee35772bca7f737216325c679bac360ecc5c", bytecode = """
program test.aleo;

function main:
    input r0 as group.private;
    add r0 1540945439182663264862696551825005342995406165131907382295858612069623286213group into r1;
    output r1 as group.private;
""", errors = "", warnings = "" }] }]]

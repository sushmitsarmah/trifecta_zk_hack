namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "2afd35fbbf878455f16f020073ae8ecfdb064a65eda91d9fd09494494ed0f432", unrolled_ast = "59bc6bf44798e0a883607760bf8838e1420fa44e7004638cde5dc0f6f4adf035", ssa_ast = "6678a2733f626a61cccaccf08c4976fca4029e822e4d96732730eb80505aed9a", flattened_ast = "1567f52ff555a4217da1be397a9fa1ea6b8df6ff0262e19f27197d71acee8316", destructured_ast = "5009f6147c9f0820df535b5ba4f0a89be42a7c90952d5efeb135e85a8c52c4df", inlined_ast = "5009f6147c9f0820df535b5ba4f0a89be42a7c90952d5efeb135e85a8c52c4df", dce_ast = "0e99bb8511c6ef7162b7ab3e4e2c91801406150b18e0737e4060d9b8febae596", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd4 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as scalar;
    hash.psd4 1scalar into r9 as scalar;
    add r8 r9 into r10;
    output r10 as scalar.private;
""", errors = "", warnings = "" }] }]]

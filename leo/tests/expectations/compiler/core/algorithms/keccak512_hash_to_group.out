namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "dd6ac1c6c62ac89024e10d02c484c2202e33775616deb5f810e8a1ec725bffe9", unrolled_ast = "316be1afc249d30cceab5ae14f410c7d1a017904ce42c30617d874f21e5c2376", ssa_ast = "f92be99c953c04fe274e33b310bbc3aaeb6283fa18c68c8fcfd0b4c60ca89d75", flattened_ast = "f37472210e03764604cf3cd599041738c90c8e7a09b3e1ae80d4b6ee5126d95c", destructured_ast = "c69edcb6e9f22b7d6dcd129a364adfac97c07328e9f8f9fdbac6148d5355fd74", inlined_ast = "c69edcb6e9f22b7d6dcd129a364adfac97c07328e9f8f9fdbac6148d5355fd74", dce_ast = "cefbb10bec978ce3f3815f2124fa1c7e0b4c7848104c53fc41339d540c226249", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as group;
    hash.keccak512 1scalar into r9 as group;
    add r8 r9 into r10;
    output r10 as group.private;
""", errors = "", warnings = "" }] }]]

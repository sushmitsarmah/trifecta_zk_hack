namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "5992b1ae07a5add1200a974385f7125edb9f99dffd1ce13fd7e9d18bf340fcfd", unrolled_ast = "39dce5c99ce83e504ab9c917ab2068735417f1fa26164257ab12bb4c2aced153", ssa_ast = "a4b23085f1f6265e0a55bce818813bfbad9355b25116bfe8d3b7338f6f165bd5", flattened_ast = "47e8b5accdbed487196f9c143a05884998c00692c2e25e51ddf644d969732f38", destructured_ast = "19c6008293a0d91c0f1b4475625f1b6de33a2f4c13e88ac507d2cfc931315419", inlined_ast = "19c6008293a0d91c0f1b4475625f1b6de33a2f4c13e88ac507d2cfc931315419", dce_ast = "3e740fc9b6f7d622e9a5c4e86e368d0ed53899be1c55cd5bf56f3151e62ba1d0", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd2 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as group;
    hash.psd2 1scalar into r9 as group;
    add r8 r9 into r10;
    output r10 as group.private;
""", errors = "", warnings = "" }] }]]

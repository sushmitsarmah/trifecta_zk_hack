namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "4c6ddaed5a81b5ff34d2f58af2f7536ea312fb89df6b428ad3f1f1276fea65ae", unrolled_ast = "d7b136dd202151b53e9f27f774f73f6c64142ebb3d6999680490fbacc657efee", ssa_ast = "8b7b38700c3eef021b17d59b1e2458dc9455c6c4c94877199cc6c89ab61522e5", flattened_ast = "562df51542ef9ba4bf36c1a9c51608bdf87c4314668b6595c9322caed3d69e64", destructured_ast = "6833866b543145d99de6a1b1fb8b5cbb3ffab266aa7fed49f27548009ea25fe0", inlined_ast = "6833866b543145d99de6a1b1fb8b5cbb3ffab266aa7fed49f27548009ea25fe0", dce_ast = "a0ea85a8846ed9294b0418594d532863f999092c68fd9685eda5985b6cf3f32d", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd8 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as field;
    hash.psd8 1scalar into r9 as field;
    add r8 r9 into r10;
    output r10 as field.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "50e10e14ecd6376b09dd684ef54dddaca54117bb8db8d76036f2edbfc4b7bd31", unrolled_ast = "58baf8b9527814958bc8050b6218ff3dd9ca21f541b4297d5f9fe814bfa5cd49", ssa_ast = "547ce1d8c74ccc46cf31fc724d85a202506754741c49a67fbac29eac7b02b141", flattened_ast = "4e8ea0a1a8c1126379d2ae2bf153b6e6657ac920865afe1559eb41301206c63e", destructured_ast = "391b338a72eac1ad1d70037628de78457e7659db54a1194f42d4d723ba42434a", inlined_ast = "391b338a72eac1ad1d70037628de78457e7659db54a1194f42d4d723ba42434a", dce_ast = "bc6855963e0a0a2614e260e27cb7e7ac77b3145e27488ac3419ad2e91e72d798", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_384 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u32;
    output r8 as u32.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "39fe927b534e754f7f8710fe5f999efdae55c675b1f680398e37f62bd170b9e9", unrolled_ast = "1e261113270c38b122320277f298e1bda483e7f83d0562004ff3910a51b1d918", ssa_ast = "30f55987bde9efb23b074c877a6c558d9d7b7d1671c6571fa926fff1546f134f", flattened_ast = "1a46378b4e7e823d817075498326e257e7a3a230cb81c63c53eaf9552cca7ca2", destructured_ast = "2ebd692e1c62fcd17075ed3c171b36addb8fa69254bf54b28104ad58dbed7b5e", inlined_ast = "2ebd692e1c62fcd17075ed3c171b36addb8fa69254bf54b28104ad58dbed7b5e", dce_ast = "f824eeeadf8cb75c64627800770aa467c78fcc759b29403c207c8bb3047a49b3", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_384 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u128;
    output r8 as u128.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "b1fa62ab197a47ab43ef459327aba7e6d4496ebfe87275d7344cb3a1e449322e", unrolled_ast = "cb485dff09ddf2f60d460d9247221d8499cc8c1e0847197579ecad0f3d790337", ssa_ast = "c8111350d4362f98a28a24ca586521e27455650f4257220fad24ba43b747d2bd", flattened_ast = "82dfb2af16a72a2546cd111555c002866b80a3f98bc2b3cbb89b4a1b0bfbac44", destructured_ast = "42d675b56dae2be86278d230f2346689f53aefaf0d068f4a3f005739ce3c5846", inlined_ast = "42d675b56dae2be86278d230f2346689f53aefaf0d068f4a3f005739ce3c5846", dce_ast = "301874543c958b0432e4fcc5d82e0c826c6685a551de2022870d3cf4eadff723", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_384 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i64;
    output r8 as i64.private;
""", errors = "", warnings = "" }] }]]

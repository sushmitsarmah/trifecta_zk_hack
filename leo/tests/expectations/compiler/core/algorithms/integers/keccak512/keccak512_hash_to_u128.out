namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "0aa2b1ad01a3a839835a1b55dbda18cafe66aca55d824ee69eebc375cb8a692d", unrolled_ast = "28707683bb3cef135af1c234fbc0beb0cc949880217dbc39888878af40558d5c", ssa_ast = "354c92d9328862464e3451e86cd9b3e2ff91d28b90f3b76be9d89773ff1b43ad", flattened_ast = "eb9f9a3011272586c3f528bad36cc5588a01a37d4cedd83ad98905b25bbddc63", destructured_ast = "ed811804f88316c5f4ee0dc3b1a8575ea8b075e23dae105553bcde86e3d00601", inlined_ast = "ed811804f88316c5f4ee0dc3b1a8575ea8b075e23dae105553bcde86e3d00601", dce_ast = "142bb7e1dc301beece3b01d54188f1843eacb2211211b76b9609bc9c7c5b77ec", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u128;
    output r8 as u128.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "a61e87cbd1a7003003394f0b138c512a729092387c97c2df550c7fcb6c7aff61", unrolled_ast = "2da24675237d77063edf20740dfd6053450da2c8047027ea74dc09c25ee0dd94", ssa_ast = "6251d2dae19cc9443bcc2ea95d3cdce02eed8fb6fa48b7f39caef0e5533ee569", flattened_ast = "3cd8ee09e76b1611f8d424d727472c10a7790f6f300a823bdc9c483325923cab", destructured_ast = "474bdbaed4ee583feda922b8a6a83f020f0d6daaf44ed76388928202c79cbce0", inlined_ast = "474bdbaed4ee583feda922b8a6a83f020f0d6daaf44ed76388928202c79cbce0", dce_ast = "697200a442fbc2be57a4b4fb2ccb85f12964dd357c63a58cb675bd48ad77c691", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i128;
    output r8 as i128.private;
""", errors = "", warnings = "" }] }]]

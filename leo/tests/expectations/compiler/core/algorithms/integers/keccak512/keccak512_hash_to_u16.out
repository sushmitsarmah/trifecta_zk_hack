namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "3c23bd11eb47b2a6bf9791442a6e6c860568c865a411efc5f5079f1f011dc8df", unrolled_ast = "56109ca58fb7f639900eb6bd227fd940a793a58120152194e3922263aa787bdb", ssa_ast = "efea655da13bb2e6b3af62886c552e5265caf563460aaeea3977c18fa4d6a63d", flattened_ast = "134ada8a1ea6134d10e971e6e99c63e522552014e2f1411b5703b4c0c3e4add4", destructured_ast = "c47100601945b55979c75f8c9cf548a62191853674e7d6f07a31a490c26333b1", inlined_ast = "c47100601945b55979c75f8c9cf548a62191853674e7d6f07a31a490c26333b1", dce_ast = "3a040a6f616e8ef0163c64e64e032a4a73dc342041a3f9aeaf00dc09153c903e", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u16;
    output r8 as u16.private;
""", errors = "", warnings = "" }] }]]

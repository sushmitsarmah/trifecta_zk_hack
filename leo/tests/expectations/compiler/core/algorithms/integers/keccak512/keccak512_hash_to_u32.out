namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "205a779f3db953f58162ae6206d9f39f82801485f471b7ab90c1f2ba4c2b4325", unrolled_ast = "68f81580b3b5275551acd8873c53458a8d0e8c8b1fa7c4216089c4671b06d674", ssa_ast = "d4e42313d958a690b5b8ddd07fee1114cc6606ed43a8df770bc657134fd882fa", flattened_ast = "a410b65c13003f0ff172e260f5ef7b7f72249aabfc58c5638983fa64c67a221f", destructured_ast = "338c385883f320fe13b7adeaf42d513047b84ced20e48c1bdf311198185ef962", inlined_ast = "338c385883f320fe13b7adeaf42d513047b84ced20e48c1bdf311198185ef962", dce_ast = "9b19bf8fedbeb30e52b5adc2bd374b14ee417f9264335fb250e289426eb20a6a", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u32;
    output r8 as u32.private;
""", errors = "", warnings = "" }] }]]

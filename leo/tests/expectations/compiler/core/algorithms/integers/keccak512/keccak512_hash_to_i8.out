namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "581993f9ddb206fefa3e24d1086e7d890ad289aa2973f630e8e1a692dde767a5", unrolled_ast = "827a5868a733e24320637d0ec6812517bc57d052913b5d2f98a34851c1de8a7c", ssa_ast = "442a63ba6d1542340743cde787eca1737739b884cfeba04d7868ceb19f5dc0b3", flattened_ast = "16ea176f0db9ce0e2f9823299f37a9b4b47df0719c350245dd40da7ec095c9ba", destructured_ast = "f93d9f4a87b86aad833035466486d654c9218c0243abcbcf5e87f7fc0ba1b3a6", inlined_ast = "f93d9f4a87b86aad833035466486d654c9218c0243abcbcf5e87f7fc0ba1b3a6", dce_ast = "792780a77ed76555f805d91ba682a79c856f775935369f53ec0bf553e5c5b62e", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i8;
    output r8 as i8.private;
""", errors = "", warnings = "" }] }]]

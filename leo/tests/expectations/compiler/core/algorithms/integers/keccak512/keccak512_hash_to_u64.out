namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "5a498c7969381b7386bca021146a670dee84f2cd0e42803b41fe0ac878845ec2", unrolled_ast = "cedddff8a2d04403c58fd4510845184d3d06601e2480d32eac5619517487a55b", ssa_ast = "58a3696038582c8955c8f72dedf09df7d8a73cd7929af2d7a303b92bdd8f76de", flattened_ast = "5d05520712c509772a3b4cec14ed718c5597194ef2579f037d3bd4d59823d3f8", destructured_ast = "7d329c8e85299500ed664b3b2fef72757b5799db6d90be03d06348b51c0cc38c", inlined_ast = "7d329c8e85299500ed664b3b2fef72757b5799db6d90be03d06348b51c0cc38c", dce_ast = "833e0769b8912e20ee40d3722cdc585a19a32c3ede447c91dfccd48d792d6a14", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u64;
    output r8 as u64.private;
""", errors = "", warnings = "" }] }]]

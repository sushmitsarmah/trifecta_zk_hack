namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "6fadb2f85ac266943cace73ae380b0d89c255f1d504974df0e3160c646d85dbe", unrolled_ast = "01baac14ad702b0c3f5f4370e288397a90b3bb58725b4fa5e8e0dec120673921", ssa_ast = "c0bda6c7a5000080c5207a4da1245090ac246b4cea048ca52d454b1b19a46b90", flattened_ast = "203663ace9e2714ede7948f9aefa0190e4ec37f363ed8046b6ad6038931993e5", destructured_ast = "8df340262c6e6b496a221f93c411b042eb9e250af5622cb552e2f456807d16b4", inlined_ast = "8df340262c6e6b496a221f93c411b042eb9e250af5622cb552e2f456807d16b4", dce_ast = "9fda3d2323df3fbcee0498aaef13f3766850981c62263df7dd390b693103ac18", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i32;
    output r8 as i32.private;
""", errors = "", warnings = "" }] }]]

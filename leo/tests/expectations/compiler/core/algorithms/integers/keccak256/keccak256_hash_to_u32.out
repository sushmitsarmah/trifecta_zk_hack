namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "1e89b481628f609f74cbdae36b2aaa4dae117f0e552ff0ba06e266eb1671e7ad", unrolled_ast = "c48b9a5c7dc2e9c46f8355619f71e59f7f27f909b6821cb28e3280ae6401d5e0", ssa_ast = "bcf6b2d3e1a79b01e17274e631a88405d1c8aef4082d8c16fe5f6eaa7ef0a1cd", flattened_ast = "029935ea3f34af45171e52402c3e17a401e944a19859ec3afe467a42e2f30033", destructured_ast = "9efa2ccd6a209536dd95d61241d94591fac256d8392892ecc626be47b3107a83", inlined_ast = "9efa2ccd6a209536dd95d61241d94591fac256d8392892ecc626be47b3107a83", dce_ast = "630b8100458502290f57d7ff5cfbd4c03b91a585381209a0ef414190c333ceee", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u32;
    output r8 as u32.private;
""", errors = "", warnings = "" }] }]]

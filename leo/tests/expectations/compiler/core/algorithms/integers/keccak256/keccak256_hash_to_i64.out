namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "9ab673743f3594d0979bdab5fcc40d7eff16e8a010a7e78c494c6b6253c49b42", unrolled_ast = "80907e883b73fe63ad7928a7b90c15140afa3306c560011e3849894c50f35420", ssa_ast = "0b1f11b9a4c6a2d637740a17d30c59056a81d6f851fefa891f832c584cc14a6d", flattened_ast = "471eb2d15ab31cca73dad4201a02187b46381d5f6a505df9dad0d8aa26f5f1cf", destructured_ast = "967eba2ce8b0d3b70e82f29f31294ac591f09fa3cdaf30889b7b2c44bf9fd3e5", inlined_ast = "967eba2ce8b0d3b70e82f29f31294ac591f09fa3cdaf30889b7b2c44bf9fd3e5", dce_ast = "5c81bc00070783c06681a35700aa997e0952729ff1690b1dd10e74913581266c", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i64;
    output r8 as i64.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "b0f80eef333158a3dedc3b31aa88c1073f10423c52b26169c2be1aa23bcb7127", unrolled_ast = "998232638054fe9becab9e78c06f7d84412204153a2225e6282d55b9551137eb", ssa_ast = "9d8bdf12bd2ab05b06d6fc02d29ebb701e5393dbcca5e5eabc2b6b4e4023107e", flattened_ast = "bc15871e1c5275479d46b260c34e6d562cd2be93519161ef1fa8b8f44e36f44b", destructured_ast = "3ad03028af91e16f6e815a13c735434c7a905ba4f168bb1cfb094f1e9287b92d", inlined_ast = "3ad03028af91e16f6e815a13c735434c7a905ba4f168bb1cfb094f1e9287b92d", dce_ast = "27823a991fb68adcecc2c42db5a0e99c87a9c9f77d71183a6aa21f71736536cb", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u16;
    output r8 as u16.private;
""", errors = "", warnings = "" }] }]]

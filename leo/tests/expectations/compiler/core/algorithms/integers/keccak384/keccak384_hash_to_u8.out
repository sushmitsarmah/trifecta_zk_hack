namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "7cbefcf233f595dd332a73bfc95c09142070e1a3d522064d3e72c50a3995cbc3", unrolled_ast = "4cc42b3186975a5492bf951891bd255ab89d23d0bccddb516ec5905a50c9f68b", ssa_ast = "ab02f72509a710789a6403ea83649782bcb0f7cabc82e22cca949d9855468773", flattened_ast = "8e2f9ecbfea401e6e250be6990b44c0813cae1e81072ce778ec0d756dfbf8b00", destructured_ast = "ba8e28868f71c663b7c67b0fc522c46c8f81670f4ba56c0cd3e01a9af0a722e2", inlined_ast = "ba8e28868f71c663b7c67b0fc522c46c8f81670f4ba56c0cd3e01a9af0a722e2", dce_ast = "bb1ec348bfb4cc11e274ae3452a95b150ae73714aacc31c62d63eaa5053beb8e", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak384 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u8;
    output r8 as u8.private;
""", errors = "", warnings = "" }] }]]

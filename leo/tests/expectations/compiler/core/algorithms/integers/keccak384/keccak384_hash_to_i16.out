namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "ba3898259a2824f95be822a5daf97931fe2080f30f9bfcef5607beba6c099213", unrolled_ast = "e54da61dd6538c19f5e0c6829719c412613c9f31e8d9cec2524d647a60ac9742", ssa_ast = "08f9b8da3ebb5de07783161bc9faa20c70721dddc39fc2a11ac90000bc8eb9c4", flattened_ast = "08a1f813b1f51b739f57c6e5ea5183bf74ac29941865996605af10b9d6933f60", destructured_ast = "f0365cb56cbd46e9520cb89a82deb31e39d208f77be1ae8e052211b3d8efccb5", inlined_ast = "f0365cb56cbd46e9520cb89a82deb31e39d208f77be1ae8e052211b3d8efccb5", dce_ast = "e9a467fdb829b8c2f5656c0f973c62c6b901e90cb9ed76435b722f8edb8431e1", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak384 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i16;
    output r8 as i16.private;
""", errors = "", warnings = "" }] }]]

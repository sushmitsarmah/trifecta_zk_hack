namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "b25fb77b11b643939ed5c49d9139f0b98e96d93c0f41b826e84098e6f32fdacc", unrolled_ast = "b8f9e65fed3fa1bd2f97b14b9983bea8cb21cfcd4604026448e5faa57b2ce3bd", ssa_ast = "ef118d3218b368fa56443d81434bf197738b941a735289556895ef2f7f682aba", flattened_ast = "4b1b1f918c6b7bc9ca4b899dd6419eb881d0cbe11b1d267032e306f31192981d", destructured_ast = "4371197e559966e384dab5a40f8b4f0360713bec6ea4e7b104e7ac403a73ad74", inlined_ast = "4371197e559966e384dab5a40f8b4f0360713bec6ea4e7b104e7ac403a73ad74", dce_ast = "ebde72879f218ec62d8af8ab17dc077dbe2122c7a9f1b9b197cb9963fa849c7e", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak384 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i64;
    output r8 as i64.private;
""", errors = "", warnings = "" }] }]]

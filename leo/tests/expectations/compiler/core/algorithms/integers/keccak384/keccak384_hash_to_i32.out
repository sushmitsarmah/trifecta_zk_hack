namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "bfdbedeeb92b1ee61047a14fa9252a847fb77b08fb50da440dd49b7f017a8cbd", unrolled_ast = "13f23d23682c289a14266497daa76ff2441f6164777e5e7efba91b2c5a15a1f1", ssa_ast = "5910b3de7077380ae4796312eac3adbd3dcc88344c964bb1bd7cd801b24b4288", flattened_ast = "242e5713ffd9bca9b7f7fd2e87b9d205552d35a05171da90b432343c82273626", destructured_ast = "dcb991648ae3e0680459254eea173c02b962563b0ed7e0c1f605c1080c682003", inlined_ast = "dcb991648ae3e0680459254eea173c02b962563b0ed7e0c1f605c1080c682003", dce_ast = "0e52e523850f2aace9f69195630673cc9293d9aa6348b26e099543191ee292b4", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak384 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i32;
    output r8 as i32.private;
""", errors = "", warnings = "" }] }]]

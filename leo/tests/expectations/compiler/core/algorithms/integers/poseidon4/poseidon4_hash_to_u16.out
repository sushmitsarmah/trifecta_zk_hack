namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "fbf888dad304e879619b4887c101a1ffd7bab2caa03cd3b3d69fcdfde32f3f26", unrolled_ast = "86021d9e414f331d8de3646582fe8c8896149a35568e77ea39ce0ea6c88a9003", ssa_ast = "ddb6299fd0f7e0d48424652928eb32b25b27f258edb12d964d29ff5536e0bbdf", flattened_ast = "4eaf11fdfa974e2998ee055a705852c6184aab27244ed197e1edb8434822c516", destructured_ast = "2ea3b51ee269f987e268def1120e154486bc983b19613bc95c2de82d567440b3", inlined_ast = "2ea3b51ee269f987e268def1120e154486bc983b19613bc95c2de82d567440b3", dce_ast = "5960965030149d93d9165bc7173e326affec4bcb68277220d79d3326e98c522b", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd4 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u16;
    output r8 as u16.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "3eaf0882db0cfcbf6de5835a3e371866978dcdcbcefa64c51831e73206d69ba8", unrolled_ast = "9c74e5783515cd3edd05164d3059a0b56bb5ef3d006fe88ef404a91584a91679", ssa_ast = "dddf084a4db62735fd1aac065dda98bd1f2c4317b53a4d994c0732b095c29b58", flattened_ast = "2b42f09aff253f1cc4901c9f3ad8afd6d32954c313dfbdd01455261d1fdb3225", destructured_ast = "e16f12f49cd8d2339a54ee27095fe4238dfbfd4a9962d2eb3b0bd298fa744726", inlined_ast = "e16f12f49cd8d2339a54ee27095fe4238dfbfd4a9962d2eb3b0bd298fa744726", dce_ast = "d30afd65b96596ea087f7d7cf2b64a3677786b2a8d1d40347ffa072542d976b2", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd4 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u32;
    output r8 as u32.private;
""", errors = "", warnings = "" }] }]]

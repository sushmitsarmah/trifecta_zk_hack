namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "8deb064d633d0cee64e55886dbccdc46815a8a75c94cd751bd624a93d172bb99", unrolled_ast = "111b89688f82f1b11d6436fbc175e38eb76466cf0e9423ccabf5dfd279c814bf", ssa_ast = "c6c6eac479b1fc0198284cd1fe591c8eb88c78cfb85867d8e0ecdeadcf1df5cd", flattened_ast = "9f613b88b8ee6ac22e53b00a4ca5329e3a5885eb960350d6781ead7c11436e6d", destructured_ast = "0bd41a858e6a8db003dafec787389493c3c5a50c8911734647aa9f829553e3c7", inlined_ast = "0bd41a858e6a8db003dafec787389493c3c5a50c8911734647aa9f829553e3c7", dce_ast = "0559aa60789285eefb5b6a755ce7c4d77f1f178bee406b73e24dd20d48b22b73", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i32;
    output r8 as i32.private;
""", errors = "", warnings = "" }] }]]

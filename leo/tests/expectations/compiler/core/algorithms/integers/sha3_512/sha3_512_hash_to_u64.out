namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "f989f75222007a99205066af709068dbdb1995ef222cbc8907dd0bdfce8fb369", unrolled_ast = "551918ca2995978240813ea85802bb89b3b8915f71a1d8ff4148aae2aee553d9", ssa_ast = "82d44d25fdaa3c40aec556edb0754614e1119ec88dd67f280343cb66972f9f25", flattened_ast = "d5d170e24d8f0cb72014689a8d773210f820ba739342f465d6253fd4c268acb0", destructured_ast = "bb4c06fcd68410201872578a9ef342888b61815d8ae582b57548fdfc218a83cb", inlined_ast = "bb4c06fcd68410201872578a9ef342888b61815d8ae582b57548fdfc218a83cb", dce_ast = "1866ac6c860372116aea3fd2014e62f28a534d16e97f817f1a0c71f798c3154c", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u64;
    output r8 as u64.private;
""", errors = "", warnings = "" }] }]]

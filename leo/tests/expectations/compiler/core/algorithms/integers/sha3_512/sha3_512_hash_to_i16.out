namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "a5171c9e0e27c27d5b091a83d839594d73fc0029e7d1d2d2608a279c13788ade", unrolled_ast = "4f22176592e22485cc24a2954f0f961140b6453ee4bd2d051ae6710d3716031e", ssa_ast = "41c250511428125fa32acf7bd78d7c3233adbc79d3d309ad1638cf2972c489b9", flattened_ast = "be9b370c3305ad6e1ae2bb944be92c6cacf16988414c86a062e07c8cecc236b0", destructured_ast = "6caaa96fc4dc26298e321817210375788eb2d62271e5970c753fa72d37708f3a", inlined_ast = "6caaa96fc4dc26298e321817210375788eb2d62271e5970c753fa72d37708f3a", dce_ast = "daf48f6be27d0ee403e17c4a9b629d618616b1493775416c8913c6d201e7571f", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i16;
    output r8 as i16.private;
""", errors = "", warnings = "" }] }]]

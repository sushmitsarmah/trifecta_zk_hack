namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "bb9c440c0f7af326869bb9a49fd759b80ed80b2c68939a0ecae478415a7b9460", unrolled_ast = "2592f9448a2f7466c5cdec04922d17013071dba912570588ba97b2289e8112ac", ssa_ast = "3209fafd204507a171caf777fda4920daa970b1a6c71251ba57c51645206b97c", flattened_ast = "d01576171d68b20f3c022f19634a6ff61d169580a08e2c85a8f8260b5125b1f3", destructured_ast = "056746fbe014c23735a35375960a6a6d2524b955685e8927d49f4e4561e1a187", inlined_ast = "056746fbe014c23735a35375960a6a6d2524b955685e8927d49f4e4561e1a187", dce_ast = "cc8de41312f804a10bd0f111701fdd35540fe79e9b5ce3faa9521f5c2ced6a62", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i8;
    output r8 as i8.private;
""", errors = "", warnings = "" }] }]]

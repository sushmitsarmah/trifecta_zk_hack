namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "3ad56b01d05844bfa93a7b61929cfa41826259ba721b328e8f68e8185305a546", unrolled_ast = "ed74ec8a02c43385e07392cb9ba05c54fa9d51c5834a816856192d80fb96a04c", ssa_ast = "70a244c01faab653127caaaf4358a9f04f62ec775423a631cb21d70da14849f0", flattened_ast = "d54df4cf52443b37609e58bce35d118967d2e878503595c61a820e55c3109079", destructured_ast = "f3642ec49d9c23ec630407cc9cbda2f3026b64db4ee4580df1f53eab7c6a7a7b", inlined_ast = "f3642ec49d9c23ec630407cc9cbda2f3026b64db4ee4580df1f53eab7c6a7a7b", dce_ast = "f41616ec0b1715ccc77cdb2e0e8001618a8b675cfa5705165e363b194dd87a85", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd8 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u64;
    output r8 as u64.private;
""", errors = "", warnings = "" }] }]]

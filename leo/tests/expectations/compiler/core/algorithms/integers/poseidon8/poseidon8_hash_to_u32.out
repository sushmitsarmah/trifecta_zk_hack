namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "5158ab59e76691bc9dc7308772f454480333ab6c9f0d129ef7a40b6ab7cf5ce3", unrolled_ast = "0b647e6dd8f3a70333b2b384c1d78d66515d361b831ec9b5f1734d9c7db645d5", ssa_ast = "bb2c5f35f1f4c634dd518282786496c2d8395dd2d791b6594af2e5ccb0161fca", flattened_ast = "5bcdc55e903a38368123f8e318584acccaad529d66fee4be9d97a58041333d64", destructured_ast = "b1f199124e77bf0e01f215a552b04380172ead41cb178edd14168e4df5733b8a", inlined_ast = "b1f199124e77bf0e01f215a552b04380172ead41cb178edd14168e4df5733b8a", dce_ast = "9b4fb988f4d5cc3c8bc0b3e03e71543ee718d349140c005660c62bbf98d8894e", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd8 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u32;
    output r8 as u32.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "b8fcebf03abe1036145e4bbe5648bc5ef97533dff35bb04dc55a82641e1903bb", unrolled_ast = "1644666939f4f3fecf4c9afcd18c929323e724b5d3b2d8b3fb362c5a65e026a3", ssa_ast = "2a1592b22ea0269d8e3cab34b2e40dd157434170afee64d08096a28606f1be85", flattened_ast = "0b8fe2c489ff02770fda06459575dc811c6b2e5749e4a1f14d089afe238c7d0c", destructured_ast = "c361aa36e36e6c3b0316e716301224a518275128f1133ebcc5d1891266110055", inlined_ast = "c361aa36e36e6c3b0316e716301224a518275128f1133ebcc5d1891266110055", dce_ast = "256059c77752ea664170e78c7883ad278e3432b752d26862fc9425d23bd2b7c7", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp768 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u16;
    output r8 as u16.private;
""", errors = "", warnings = "" }] }]]

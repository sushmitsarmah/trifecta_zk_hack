namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "c2cd904f9ff2b53dd22d7ac9884433de236f0718691f36f41ad4400ccfcdc8d7", unrolled_ast = "b38c4516d052a8a4a40544e2e31dd7be23628051b85696c9089a65d00df22b05", ssa_ast = "ba144afe5a5f54c0450d709383c250b6888866352d0ac76627e6a8ecb2781470", flattened_ast = "1488592bbc97cd404d9165c74672b1fce4d87b998ad06cb5fe8884bd435571e6", destructured_ast = "d479fbe552b816e6e07b0155259bae55c338f563ad551916569442ab305ae96f", inlined_ast = "d479fbe552b816e6e07b0155259bae55c338f563ad551916569442ab305ae96f", dce_ast = "2c00eeface8a9a47d70313cc572032070f8433271a8dae2a21f304b82a733ff8", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp768 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u8;
    output r8 as u8.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "9608ff8b894d92df33318bf170b22fa473b7b9a302a150879ec7a3fe41c144a7", unrolled_ast = "4844709889c0253477f5aef41f09d3a09cfa89b40a5322d8c79cd8cd98e6abfd", ssa_ast = "ab3b7420f075e7efc14c1c691b11496c885988c267ebeba62b701e7c49c76608", flattened_ast = "109a9bac366d7ea865ef57618e88cb46a4efda4afcebaaff0a3f1c2ef61f38c7", destructured_ast = "d07836b119989da858b3b50ae7a81b56eb04d88167afbdb929c3b4e531f2a4eb", inlined_ast = "d07836b119989da858b3b50ae7a81b56eb04d88167afbdb929c3b4e531f2a4eb", dce_ast = "db0b7713a3e7dc9fe1207f4347219f966828f12bfd3d5a546ce63ed752a63bb6", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i32;
    output r8 as i32.private;
""", errors = "", warnings = "" }] }]]

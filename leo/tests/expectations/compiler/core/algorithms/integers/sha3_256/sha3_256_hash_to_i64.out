namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "e7c13c39a9619ea30d0eebce39238253b9f7d7c19c1bdf66328994543d6978ca", unrolled_ast = "ecab12c3714df5f8df7d3a53f01b9e329a35323c326c33fa0ba3b904f2c376d2", ssa_ast = "0702e0f718c648ccff4fcf3968c0408089077cd2801b233cb28a3f7f2cd1d8e7", flattened_ast = "0915e6b7bab3251858698ac8ae54683a5307c698ace7123287c7d10529246281", destructured_ast = "f8258f632488fe146120474afea7ee2d73b2114bc7087dec66f8fcd77ec50f86", inlined_ast = "f8258f632488fe146120474afea7ee2d73b2114bc7087dec66f8fcd77ec50f86", dce_ast = "bf4f54a7eda16d5b7e1ed10897e195c4a400b8aa8b8980f66db584b57f8dd9b3", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i64;
    output r8 as i64.private;
""", errors = "", warnings = "" }] }]]

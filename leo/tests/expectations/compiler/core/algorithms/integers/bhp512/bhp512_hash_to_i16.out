namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "f4733a66bc4cddca0d350e8af547fdde33e43b715ac5105f62aed7e45503ca2f", unrolled_ast = "f8bfffe2902df904aeecdbb94de10f8dd12a1ea7d019c2dbac9a1b14d8cc4d18", ssa_ast = "c228f629aa87eb35980a7a1fd857380e73abb3420a2a6977977926423aed1068", flattened_ast = "49d7ecbfb9bbab43ccefbe117fe4bc0d2a4a0fa998a601541a6ae2339993ebc7", destructured_ast = "69eb70ba8f2b100a348abc0caf89edcfc286a1c79cc3a242aad942933c47beb8", inlined_ast = "69eb70ba8f2b100a348abc0caf89edcfc286a1c79cc3a242aad942933c47beb8", dce_ast = "a8b1ff0033713229594d09caf01cb486591b1acb7c62be807a127f92ae292100", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i16;
    output r8 as i16.private;
""", errors = "", warnings = "" }] }]]

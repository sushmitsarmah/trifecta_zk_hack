namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "9e1e981d6feb7eff67a920f434d9b7fa996e1a7d3f7ef324ca443375e3e26b08", unrolled_ast = "6af639d82f929fb82f42beb298e6f56970dff0569e6f9431306248732523009d", ssa_ast = "0c10ca320fe706555b0fc48c18125891485b256f44ca48ea5b446362e13d5ff8", flattened_ast = "926565ce236bc99defde0e75a06b66d6d68614222fe83bae7a0a3ef04645c226", destructured_ast = "86a54bb09efd2e89b8ccfc5d2632c37fda26d0fbcbb8a16a3aa2ed95183703f3", inlined_ast = "86a54bb09efd2e89b8ccfc5d2632c37fda26d0fbcbb8a16a3aa2ed95183703f3", dce_ast = "a4b587b27920486f2141c70853815628af039a8646c2c6ed5a1e804544716770", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u32;
    output r8 as u32.private;
""", errors = "", warnings = "" }] }]]

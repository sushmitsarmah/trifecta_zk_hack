namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "564575f4e6373b12b437541baf545a744ce94d322c8cc9d806584d3c6f0103ce", unrolled_ast = "422c043b6e1a7870f9dced57cd2af8ba0a6cf21c6527a0679f0a81a806ad07ed", ssa_ast = "35608a009f0e39235134632510d5a6a7779a522444661fa6369fc65f3f0643ef", flattened_ast = "172718ba125fecd28f777531cdf2b32169b2dacb2932e2a7b786e210e1b21638", destructured_ast = "24ea4084c6cc63b03d3de1e28f49706fe18d3e4acc482cfb2c348d6d69139bf5", inlined_ast = "24ea4084c6cc63b03d3de1e28f49706fe18d3e4acc482cfb2c348d6d69139bf5", dce_ast = "2da5237b03ea7e860b939da1fb42f440a179611afd26040da28dddb037f42793", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i64;
    output r8 as i64.private;
""", errors = "", warnings = "" }] }]]

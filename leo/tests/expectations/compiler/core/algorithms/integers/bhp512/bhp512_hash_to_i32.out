namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "ea822de086b74c197715a51d4a757600ea8ffdd388ae030bab9f4b6614742c37", unrolled_ast = "1eca6894e5e6706b6fb714e88004a212fee6c6a9d40a5c8f8c1ecfb66617e984", ssa_ast = "5336146b5feb8f2926ef9410d485e499f65e4d0c9a6a94ae576f3d380d1eee3b", flattened_ast = "f40a81cedc8a858873bb21800496a3da7013440623c2c19b0dad495632ff5447", destructured_ast = "a71188558053e264daeab13716bb51b3ab7c25305876afff463b6dc539944f45", inlined_ast = "a71188558053e264daeab13716bb51b3ab7c25305876afff463b6dc539944f45", dce_ast = "d333bbac1dba0332b5790b8b9152f003bd6b5a1bc3b12d3535a99bfd0fa7c4c1", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i32;
    output r8 as i32.private;
""", errors = "", warnings = "" }] }]]

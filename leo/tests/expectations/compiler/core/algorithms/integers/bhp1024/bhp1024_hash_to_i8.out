namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "e0a0f783611f7bcc08271c7259ef2978ee4571cb86633016317f8a61263f9bdb", unrolled_ast = "6f4efdf2864a09412a54f5435468a11812d9a80494476188009e8645303064b1", ssa_ast = "a8ebceefee7e2bd2388ab58e2be25ea32139479109b5281dcbfbf54f89f712c7", flattened_ast = "64d03ebab640e1595ce5be2614cf94f26ef05e964361f9dcb15f9aa7610fd210", destructured_ast = "7eaa24f781b42c015d3df3a54c74e8b088075c149a2700c25f2d0aff2f1b2bc8", inlined_ast = "7eaa24f781b42c015d3df3a54c74e8b088075c149a2700c25f2d0aff2f1b2bc8", dce_ast = "af90c3bab528463e06c523450beeb22ec57a0b12a12259f52115302676f01ec0", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp1024 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i8;
    output r8 as i8.private;
""", errors = "", warnings = "" }] }]]

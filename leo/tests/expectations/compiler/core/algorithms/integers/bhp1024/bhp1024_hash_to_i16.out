namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "1d5396288476d5e898e696c848ab2eddd039d20542dd4544de4fd5d47d742520", unrolled_ast = "07aa33fdbfbee64a8caa3734fb6b285090400b5fee767dd79f9d0722b6b552cf", ssa_ast = "d0f27bbd265fb1ad19560cbb8e7396f79b40f80601c767eda390367961265e09", flattened_ast = "fc1331b7a7c49633aea392f7a10c4cad295d7129208c6cda2b74b73ca795d22c", destructured_ast = "43873e7677b917d5c70708cfa183f9660640c658e6c3ad49d2c8947c1fd4b8f7", inlined_ast = "43873e7677b917d5c70708cfa183f9660640c658e6c3ad49d2c8947c1fd4b8f7", dce_ast = "0f36c07e888f688390e0b6772f92da82484b77084d5f2d7b55d1253ff80ac544", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp1024 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i16;
    output r8 as i16.private;
""", errors = "", warnings = "" }] }]]

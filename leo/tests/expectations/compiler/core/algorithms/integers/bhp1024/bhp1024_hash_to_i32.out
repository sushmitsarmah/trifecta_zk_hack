namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "468a619ae62ffb64127629908968dc3d9a7542085ce407f7513522de43b57e59", unrolled_ast = "216081fe96fd3a5298a71295b21a8dda4da7e762a0e02f40f2247dfad8bcccab", ssa_ast = "c1281ac53c80c419c0551047131f49eaa5d3e5f81acb4b9588f6be21c43572b6", flattened_ast = "842fa2ecd1d13f61e98353730a3cbdd7b35c6e0ef8445b619b0374219edd1b65", destructured_ast = "0f2d70b0174ff1344dd58cc0508e6b1dcd7ec51447dd2f8ee2655084b51c1293", inlined_ast = "0f2d70b0174ff1344dd58cc0508e6b1dcd7ec51447dd2f8ee2655084b51c1293", dce_ast = "a7ae837ffd9134c83c9468b6f4df7f648a3622e85208cf19fb9152d99759dd40", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp1024 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i32;
    output r8 as i32.private;
""", errors = "", warnings = "" }] }]]

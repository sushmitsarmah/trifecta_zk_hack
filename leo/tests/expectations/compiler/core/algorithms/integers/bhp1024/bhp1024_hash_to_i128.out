namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "442c5362ae1cccc6219eb6ed3535001f3aa1d8211912e35855d268e36c35d71e", unrolled_ast = "6c586a5e5255779d45610585fbfb317dd37cf528ba804665e16f9e58fbb82602", ssa_ast = "a3012de39be18ba306e7ad9c8d706c228f577e21a62af2f66f363f77f7b7303f", flattened_ast = "6f3cb838403bc2e4928d21441b715dd9ac15c0285155314dec1b229d8d8eeb2d", destructured_ast = "7ade1f3cc0b625108fb84833804f7339ecefb3455196a7432f0da3df7b1f7d94", inlined_ast = "7ade1f3cc0b625108fb84833804f7339ecefb3455196a7432f0da3df7b1f7d94", dce_ast = "8ad50fe64be8bf24c3400048172ef7f7a306df977f4a7007bb919340af4c1284", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp1024 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i128;
    output r8 as i128.private;
""", errors = "", warnings = "" }] }]]

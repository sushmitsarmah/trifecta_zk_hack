namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "c604091ed1b0ef2f8f74f60da81466777a76f822a33f66560990646e77a28755", unrolled_ast = "0dcd22f6db9418857587cb255edd85e7df336fadfd0c9170105be5cc5c1f3392", ssa_ast = "7a8e2ca9b2a5dcccaf4c9e3d407487ee5079f5dfe80e5c3c9cfb89b2b2ac8ebb", flattened_ast = "338b88ab6a48553ac4e7e6d86a64719dbab66156d44e72b624f86301d831f7ce", destructured_ast = "b77d8899139877c759274c3410b086c15208169ed31e0e0624a3b3eff6d94edd", inlined_ast = "b77d8899139877c759274c3410b086c15208169ed31e0e0624a3b3eff6d94edd", dce_ast = "ba4952209ba19215be9f51729eb17790aed43d7325387b1145b3583973127961", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd2 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as i32;
    output r8 as i32.private;
""", errors = "", warnings = "" }] }]]

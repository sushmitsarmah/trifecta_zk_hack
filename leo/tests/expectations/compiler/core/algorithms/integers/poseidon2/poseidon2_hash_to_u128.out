namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "b254af55b872a3cdb3d77e1f254861daac1a30bea52ee59e588f91a4fe6f3ede", unrolled_ast = "31cbab0a0e9655a2dcdb168f48d794bef2dbdc5fa70dabf1b49ccb3fd9bc429c", ssa_ast = "447adfe1383ba5d5823e33a8a7ceff3202888e059ad48a489cef0d98180127ed", flattened_ast = "61bf883b13c136aea72c95adb8ec8bd3eb940df346d5cb289c1c96fe15ede57b", destructured_ast = "a08c134cffb1185ff3baf29e1d62a414e34bb31b4a41dea38e85909aade728d5", inlined_ast = "a08c134cffb1185ff3baf29e1d62a414e34bb31b4a41dea38e85909aade728d5", dce_ast = "e6860b258290c1b647cc01c5567b2f07718d4e69534301d03bb406bbc95c8f94", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd2 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u128;
    output r8 as u128.private;
""", errors = "", warnings = "" }] }]]

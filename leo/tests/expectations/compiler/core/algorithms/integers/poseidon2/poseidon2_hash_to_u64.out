namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "01a5f6fe5c737445438873ea2094c48024457bc59f573a791cc32ce57b500832", unrolled_ast = "0cf1090126cdb5696eaf79c766c66b52a95c10f288e0c9aea762c556ba1844a0", ssa_ast = "227870d0bad668e1fa89ef5136f6dbd7c73b00f7aee27ddb8585821ad2788b17", flattened_ast = "224019569f6b3c464823eec98ceaa49367a2418150c0104de60358ee0df52a4f", destructured_ast = "77f5df09d10e31faf7b3876352fb85ab7e707045e5675ce892b3aaef5ab2a382", inlined_ast = "77f5df09d10e31faf7b3876352fb85ab7e707045e5675ce892b3aaef5ab2a382", dce_ast = "08ddf9ad0f7d284b9f5bafce0dadfd951739cd6ebfd48a3acba9e22aef094d7d", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd2 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as u64;
    output r8 as u64.private;
""", errors = "", warnings = "" }] }]]

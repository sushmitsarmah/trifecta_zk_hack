namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "8e5af978a77e15bbbf47f9025c5ad93b11577ef9b82a1b20835d7b476000074a", unrolled_ast = "abe992eaf1089b5cc91e8247a636d591d5e8b4a12a185324dfcf0a61ac810416", ssa_ast = "1a4431cef1a209e57f4978874b3e00cb7ccf92dacac9ccedd3bcbbd28c6300fe", flattened_ast = "36a1e1ea5c78fb35172a0f564b8ceffa74d10e5583930cb25620277432107247", destructured_ast = "901bea243e2e81b186c5201e14593ec7b9d3df77c601cb42f371504bf3971e79", inlined_ast = "901bea243e2e81b186c5201e14593ec7b9d3df77c601cb42f371504bf3971e79", dce_ast = "c6ec98a6c5bfd08b27b85befe51aced2356502ea1b3c7f8e740bf95a2b99faeb", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    commit.bhp512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta 1scalar into r8 as group;
    commit.bhp512 1scalar 1scalar into r9 as group;
    add r8 r9 into r10;
    output r10 as group.private;
""", errors = "", warnings = "" }] }]]

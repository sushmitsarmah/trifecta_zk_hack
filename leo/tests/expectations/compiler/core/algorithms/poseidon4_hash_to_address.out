namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "be073c2c6aa0efd26395d5e0f901a53a2b2baed5ee71e9dc24c4e4ec1b61b9da", unrolled_ast = "ec4f88de328f0ac6cff373af223368e264a0015ea2f25376d6a55261f0a1eb32", ssa_ast = "43be03f542e8974af01b8b40e88d0fb6caa9dfadc0a828a7cd27585571e9f316", flattened_ast = "adbc5e2a9dedc53aeb1b3011dc077696a6afe80346d8dca10a612449d854cd5f", destructured_ast = "2ccb4f0beb04ec0fd1741bb59cf94b1f576cbb3615bd697fa10da470c9ca680d", inlined_ast = "2ccb4f0beb04ec0fd1741bb59cf94b1f576cbb3615bd697fa10da470c9ca680d", dce_ast = "2a0592236245242e738177f44cd77ae09e013c162e2a51d43c36bd16d4c89f99", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    output 1field as field.private;
""", errors = "", warnings = "" }] }]]

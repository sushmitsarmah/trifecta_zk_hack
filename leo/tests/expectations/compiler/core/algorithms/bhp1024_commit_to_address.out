namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "9873ff758c10d6da0f990191e58448d7ce86eefdefcc552dadfa22704ae4b67c", unrolled_ast = "5a40cc65808c42c9b3a6a77a93b67e6deb71f6616d9672b5281788479ead1f64", ssa_ast = "9e4dae9ba00f5b011320455bec052c129b3944e82da19d026c4f0969242def0d", flattened_ast = "c11d4c905aa407d61c27f647c53f633417262e2c5ee1849b683bcafb53d8d765", destructured_ast = "3d5cb27ebd5b326ff38ad63e539639e2fc7aabca90235d8219c170941281c966", inlined_ast = "3d5cb27ebd5b326ff38ad63e539639e2fc7aabca90235d8219c170941281c966", dce_ast = "4d740542195f0ab2c6a07a5e3fb26422525738fd952536c1e3fd13df7135c751", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    output 1field as field.private;
""", errors = "", warnings = "" }] }]]

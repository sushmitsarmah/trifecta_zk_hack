namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "951813d08b17d74a2561da5d09a67c349fdbdb7a418890b056d6739305925089", unrolled_ast = "e1c32be1b55323546703859d7c9d9a89183a293fc1950b471e5591758da55334", ssa_ast = "346bcd8cd4d64ff5af5752e9cb78f885fed8b370c8bdb70ed07da500e1ed6493", flattened_ast = "d43b6f49a906f2bfb6fcd7880e4f2570e0337b131e5d6f70ad8b8fe441b407e4", destructured_ast = "bed158636da918e0b4ae3c1602a7eca0953393c8db416bc2cb8b2972bf7ad1e4", inlined_ast = "bed158636da918e0b4ae3c1602a7eca0953393c8db416bc2cb8b2972bf7ad1e4", dce_ast = "d7f0d8cfe7e4e26643d2a1ef1ab10faa23d5c7459595ab5d87e8d931f1076d06", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as field;
    hash.sha3_256 1scalar into r9 as field;
    add r8 r9 into r10;
    output r10 as field.private;
""", errors = "", warnings = "" }] }]]

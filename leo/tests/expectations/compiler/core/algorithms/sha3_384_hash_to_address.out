namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "e53657649bce554807d8918a8f06709baceccb6959ef1211264dc051cb8c3d3a", unrolled_ast = "ae688bebb02cb07ced0d1f09a342c8af431b6c34adff8730d315d9a9cc102eb2", ssa_ast = "cc047dd0b67419ac5d0d0d99ba3ad63541bb3e8fe95c95f0737dcc2c567cdce3", flattened_ast = "9500b4112f4b46e702e423018e1bb91941ddcd71f5cf03f38b92d2290d854175", destructured_ast = "e805765246555e0358f0abc94f6b6e5ca77ed1f8598cc9207de71e7761080291", inlined_ast = "e805765246555e0358f0abc94f6b6e5ca77ed1f8598cc9207de71e7761080291", dce_ast = "89c327062c258d0dce1c0fac0a2e1e8baae2e380830d5375393ce004ba25e220", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    output 1field as field.private;
""", errors = "", warnings = "" }] }]]

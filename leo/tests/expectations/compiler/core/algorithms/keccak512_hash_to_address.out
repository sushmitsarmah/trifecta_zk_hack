namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "4a840d912e8d128a80e86bf234df35a1d53f98a7013a008974c7f2a60bb896d9", unrolled_ast = "36adc58e3de00a46fe5a3cc10d08cfc4a6ea78e5ff0bb5d6472a7d5c94ae978e", ssa_ast = "a9f457acdad8669b0ce6b812be48515ab5e2490c0d271aaa5d94a48337d65551", flattened_ast = "e45c421f7ec0a7ce93991d33ac59f0be057074e98160d4bdb3cfa9064583afa5", destructured_ast = "b8ab3aba4ec343c1a2a48ace8c9b55806b141a566a484db59a0678be85c218f7", inlined_ast = "b8ab3aba4ec343c1a2a48ace8c9b55806b141a566a484db59a0678be85c218f7", dce_ast = "ce940aa9a1f1a7cf65ec1f7557bc000a8c55d7e39a44952c949bcdb83faa582b", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    output 1field as field.private;
""", errors = "", warnings = "" }] }]]

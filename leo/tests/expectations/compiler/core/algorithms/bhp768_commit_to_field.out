namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "c6cc94a0fd64829de7efde5303a166bcdd30e6303a81a0bedb3e957a35b273d7", unrolled_ast = "6a675eff278e5de65d2373859d4344417efa803ded0ab15e964e83820977893f", ssa_ast = "aa645be8a1f299235e69b348c806ec3f3796704befe509f123248d56c8fe55c0", flattened_ast = "9e81466d5d165c387bdbd2215f57052e0a181a40cc19bf7d64e42d040fb76821", destructured_ast = "d3ac01534a7410d9ad749d9e61f4cfae2aebfbd846f978c1c4827de5a6693bc7", inlined_ast = "d3ac01534a7410d9ad749d9e61f4cfae2aebfbd846f978c1c4827de5a6693bc7", dce_ast = "ee2be0bed80cbb40b872be08a118509b19230980dc712b4193b7971a6087141e", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    commit.bhp768 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta 1scalar into r8 as field;
    commit.bhp768 1scalar 1scalar into r9 as field;
    add r8 r9 into r10;
    output r10 as field.private;
""", errors = "", warnings = "" }] }]]

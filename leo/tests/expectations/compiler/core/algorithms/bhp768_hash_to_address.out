namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "3e30a24d3bdbc75b54c300a8e99fc4e1d513af6c597b1291c9dfb7e67da8c297", unrolled_ast = "ce031c666008a9b9151ee950dc662c28657e0c27bc1e4b97aab7e02550bc5ff8", ssa_ast = "f7649dd844cbdd7890ef5590172e211407a6b5c828412e6ac6d7bc236baf633d", flattened_ast = "4c06b2e6c0d54f8b9931a1fadd43a2f7b6eeac17ef1478b393591157d21a2236", destructured_ast = "c76ea53db3e9ce5208dddb6b9f0624c7e28b7b8e29f43f2d5757be57b1845f41", inlined_ast = "c76ea53db3e9ce5208dddb6b9f0624c7e28b7b8e29f43f2d5757be57b1845f41", dce_ast = "39c2be02a04327a152ee517e53695c487ee0ae27aa920a64e8f76260195e9e36", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    output 1field as field.private;
""", errors = "", warnings = "" }] }]]

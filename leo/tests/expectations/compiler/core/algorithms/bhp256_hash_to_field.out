namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "f761e8138c6766dd7d8a1707de6ccec23c5c377812b477ebec3d295bc2f79a02", unrolled_ast = "87e7afa144af69802ebd262a94edc4406359f61469aa50ae142021f29bdc8ef7", ssa_ast = "33c512c3c4f97c63485d8eae698823bcc3714a002f8ff88ac9a46f2dbedb7095", flattened_ast = "24c55dc24f32c976bbc014bb47847b7ebfe2ea2e3931eeb8d512cd4f299f5ec0", destructured_ast = "923be5300c44c7daedfdc1b350cf0b3a6dad4148963421b2f2e1570f27a96dc6", inlined_ast = "923be5300c44c7daedfdc1b350cf0b3a6dad4148963421b2f2e1570f27a96dc6", dce_ast = "d723e3b83378129f0cb4b15f46a4ba4e41d704f932eff73f147e0b4995cae869", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.bhp256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as field;
    hash.bhp256 1scalar into r9 as field;
    add r8 r9 into r10;
    output r10 as field.private;
""", errors = "", warnings = "" }] }]]

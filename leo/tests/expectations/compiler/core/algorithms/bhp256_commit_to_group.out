namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "e3bf36328e9bafe4e3b81ae0ceb5bd6dc73cc9ca51727d14501a5673d25afa53", unrolled_ast = "90255643fef3a5c93923a91a06cedc499c857a71d6b6b1e6f5bbacb2738df9af", ssa_ast = "b687c147f9a4bb130b9049df1135474c433a634cc6505498f0f2abb4db9a4229", flattened_ast = "4ce0807b7e03e5287d78f769baea598e764893949fc1545ef0da2cd731c93b46", destructured_ast = "4f2bbdd4572cfbd483428fafab61c34b801207e2fcfdbc8195ecfce276de8ad4", inlined_ast = "4f2bbdd4572cfbd483428fafab61c34b801207e2fcfdbc8195ecfce276de8ad4", dce_ast = "a31be4af936458f157f5d2abc58de27938fc89d3717cd5225a67f93f82e70222", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    commit.bhp256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta 1scalar into r8 as group;
    commit.bhp256 1scalar 1scalar into r9 as group;
    add r8 r9 into r10;
    output r10 as group.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "7a824d2a8ff52481397031e7ec23ecf3f9266da5525cd8de98ef30dbc1e852cb", unrolled_ast = "dddee6b811b33bbe24725601ede76ca0c1bd4349bf5cc8a1bb6083c0e3c8a978", ssa_ast = "7b33c05c8212efc882abec164a13b4ce5e7d9797e6361c21e13fc8f1cf404095", flattened_ast = "74542c9c2541580866944c0df7a3d1acfd9befff76721f8f585e7122d681331f", destructured_ast = "edd55f73a0a1b6a622c892dd0a2cbc73dda62727783a1d905b60390bcb78f6b0", inlined_ast = "edd55f73a0a1b6a622c892dd0a2cbc73dda62727783a1d905b60390bcb78f6b0", dce_ast = "576740481373f486577f467ec13eb5f705188b5060bd7f281dffcedf8f7e75cf", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd2 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as scalar;
    hash.psd2 1scalar into r9 as scalar;
    add r8 r9 into r10;
    output r10 as scalar.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "87b8d8edc7a00d177a029050e01d894f99a1ec363c9653485bb2da10bba9a658", unrolled_ast = "4d8c112fc1c196d0e25da947c56b8e7f93d7b00776c64c0a79a97c1bf83011ae", ssa_ast = "239f3cdc2bbcd953d392da8b3c3bfd99d9bcd8e7a49cba7161984350723a6e82", flattened_ast = "9b1a3bdbd3e331842842156a40eafb73376af6e94f4524d8aac0a43de4595987", destructured_ast = "1e3fb6e1afc6663d47d3332fd00c34e2c482705acb615ca8c4ab814e709c5eb4", inlined_ast = "1e3fb6e1afc6663d47d3332fd00c34e2c482705acb615ca8c4ab814e709c5eb4", dce_ast = "f3ecb3b321d8e867afea314c22af30de65b3477f92be21b88ca100ad31b8d8ed", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_256 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as scalar;
    hash.sha3_256 1scalar into r9 as scalar;
    add r8 r9 into r10;
    output r10 as scalar.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "54be870deacf63d85496695ff69928512c5a66efdfdb6a4bd9f95387bbea476a", unrolled_ast = "1f8f3880a7a13e3841cecd6f9ed3c04a59474390ddd455a5b45813eebf0e1703", ssa_ast = "874c68a075603ae4430a13b7d6dac2d0814267b04ce622a1eb2a435550152c29", flattened_ast = "76bdb228a0c5e5f178dd8e73d95b3ff1d29c7f7d37392342b211381e1eb51069", destructured_ast = "9072189cc7b0de6b3e05ef88ab7189cd164e366f2920ff7982b3a7845b3b5fcf", inlined_ast = "9072189cc7b0de6b3e05ef88ab7189cd164e366f2920ff7982b3a7845b3b5fcf", dce_ast = "72955822dc8e06aa5a701b71265c39cf7030d4301d7990586fd3aeb8b02a7904", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.keccak384 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as field;
    hash.keccak384 1scalar into r9 as field;
    add r8 r9 into r10;
    output r10 as field.private;
""", errors = "", warnings = "" }] }]]

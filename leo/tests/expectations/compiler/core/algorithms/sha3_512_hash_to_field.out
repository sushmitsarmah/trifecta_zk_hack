namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "dd7bef8e08075a6a372765e6979b845ba5404f778e7ce7890b089f67d7fdf502", unrolled_ast = "c1763a55d37522d0d5f73cafc1374c5126413ee50c5ca79e43e1b0b84415bb0c", ssa_ast = "45c18e04dc566f4f355fb073105957d1bad1098a40d994f5ec62c62ec2d4d521", flattened_ast = "3c1666d9238faaf61aa5c5d8e8b2b8b16b24c3420c97921a8b314cd2b825346f", destructured_ast = "d4179bdaac88030630a25e9f8461780f3e35d891a9428f0d83933b9d4e34255b", inlined_ast = "d4179bdaac88030630a25e9f8461780f3e35d891a9428f0d83933b9d4e34255b", dce_ast = "a1fe5666c378b0c03fbd90fdc9730f87846c41b012069416e85ef46bb14ef855", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.sha3_512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as field;
    hash.sha3_512 1scalar into r9 as field;
    add r8 r9 into r10;
    output r10 as field.private;
""", errors = "", warnings = "" }] }]]

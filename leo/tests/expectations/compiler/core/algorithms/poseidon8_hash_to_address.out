namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "296a2a744051d37632fe71b327a73e99b945f2c4d845f5904ce1e53572bc2088", unrolled_ast = "22226eee982346c7ffcf4f914a88fb52ad228fbee26b11cc40f16358896e7854", ssa_ast = "da4ce55ad7688bf09a995d8c88fe6be9046ddbbdd3b20bbc73b7f0c77f388b89", flattened_ast = "5e92d3c78b53e89ba3d37517c229798ca56cef55ae83f2d845e3a17a2cd3c703", destructured_ast = "e2eeee34115891665f5390f72bccf5ae920fe8fadbfa771a2ddd41c04dccf302", inlined_ast = "e2eeee34115891665f5390f72bccf5ae920fe8fadbfa771a2ddd41c04dccf302", dce_ast = "2a0592236245242e738177f44cd77ae09e013c162e2a51d43c36bd16d4c89f99", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    output 1field as field.private;
""", errors = "", warnings = "" }] }]]

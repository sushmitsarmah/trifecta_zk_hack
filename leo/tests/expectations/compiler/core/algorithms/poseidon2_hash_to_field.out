namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "6a16cf7cc3f5e6cd2e0ca0f2039980bbcd8a7000c81218638991ae61e9120158", unrolled_ast = "021124d829366576b3ad49c832ea76d3bd1767ffd9270fac441adc63facd64a7", ssa_ast = "aaa3820ee19323ae2f4cae4be32841869e6f786d3a675402654d4f4ebc6354ec", flattened_ast = "1a9925b0225c1a5637efcb33f475539d1d64bc34cd85ca67188e59b6f76d3292", destructured_ast = "9837af4f3a051634a6328f6e121802f11f6cd686dacd533e1196341f480c0c77", inlined_ast = "9837af4f3a051634a6328f6e121802f11f6cd686dacd533e1196341f480c0c77", dce_ast = "d75d92c902d49f7783921b08715df0c9e2e955058eefeb34b9517cee11c2ec35", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    hash.psd2 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta into r8 as field;
    hash.psd2 1scalar into r9 as field;
    add r8 r9 into r10;
    output r10 as field.private;
""", errors = "", warnings = "" }] }]]

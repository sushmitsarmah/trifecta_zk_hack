namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "27bc5906a51928b0733372051121207550866d123c2242209e13c65d8f6e9281", unrolled_ast = "800ee94b754dfe2fdbc79fed8d451f61652e0742ac33a9adc2e2e8346b7f347f", ssa_ast = "c10885f1410491a111b3fd45742f54f681bd4df2ccf390224c59238665ebf0a4", flattened_ast = "e8706c693f56874797130331495c3be6d9e83d3c8ca95b1ae6d20a4e1e4ffb1d", destructured_ast = "f63c2410f3613895f89548b45b8a7dd2fe1fa4da5cbcd83564683f6b1397e37e", inlined_ast = "f63c2410f3613895f89548b45b8a7dd2fe1fa4da5cbcd83564683f6b1397e37e", dce_ast = "89de7c1fc8734dd0499cac60b4a9b3864eeb06b2f5228863b293661c41fbeac7", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    commit.bhp512 aleo10qerras5799u6k7rjtc9y3hcwxuykr45qra7x7dp6jgnc0923czqm0lgta 1scalar into r8 as field;
    commit.bhp512 1scalar 1scalar into r9 as field;
    add r8 r9 into r10;
    output r10 as field.private;
""", errors = "", warnings = "" }] }]]

namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_ast = "b9e2727bddbe86c998d286d3ed6b59e156781bb2c70993313efd7258af038ffd", unrolled_ast = "98063df46bf27d39589609a7865ea1fe40be01c34f76e24bb8a9761ccf7df6cb", ssa_ast = "64c5b680403daa2c4eb5ec81fc85a2f623e5cdcf78c4222fd0f70585f2e47251", flattened_ast = "8b4c9d5f7ffa621da0f81893ebd6e3d96bccd02da41beda2205a5323d116a8fc", destructured_ast = "4d6c2d7d2ede133821eb6d59ff21063d8f9c1b6668c43d9324e67318082fcc55", inlined_ast = "4d6c2d7d2ede133821eb6d59ff21063d8f9c1b6668c43d9324e67318082fcc55", dce_ast = "ce940aa9a1f1a7cf65ec1f7557bc000a8c55d7e39a44952c949bcdb83faa582b", bytecode = """
program test.aleo;

struct Foo:
    a as u128;
    b as u128;

function main:
    input r0 as i8.private;
    input r1 as i16.private;
    input r2 as i32.private;
    input r3 as i64.private;
    input r4 as u8.private;
    input r5 as u16.private;
    input r6 as u32.private;
    input r7 as u64.private;
    output 1field as field.private;
""", errors = "", warnings = "" }] }]]

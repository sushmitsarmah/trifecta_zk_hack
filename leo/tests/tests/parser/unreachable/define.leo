/*
namespace = "ParseStatement"
expectation = "Fail"
*/

; x = 10u8;

. x = 10u8;

import x = 10u8;

, x = 10u8;

[ x = 10u8;

] x = 10u8;

{ x = 10u8;

} x = 10u8;

( x = 10u8;

) x = 10u8;

: x = 10u8;

:: x = 10u8;

? x = 10u8;

_ x = 10u8;

= x = 10u8;

== x = 10u8;

!= x = 10u8;

> x = 10u8;

>= x = 10u8;

< x = 10u8;

<= x = 10u8;

> x = 10u8;

.. x = 10u8;

as x = 10u8;

console x = 10u8;

for x = 10u8;

if x = 10u8;

else x = 10u8;

i8 x = 10u8;

i16 x = 10u8;

i32 x = 10u8;

i64 x = 10u8;

i128 x = 10u8;

u8 x = 10u8;

u16 x = 10u8;

u32 x = 10u8;

u64 x = 10u8;

u128 x = 10u8;

& x = 10u8;

return x = 10u8;

self x = 10u8;

Self x = 10u8;

true x = 10u8;

false x = 10u8;

0 x = 10u8;
